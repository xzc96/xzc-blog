export const data = JSON.parse("{\"key\":\"v-49661e44\",\"path\":\"/%E6%9D%82%E8%AE%B0/%E5%B0%8F%E6%8A%80%E5%B7%A7%EF%BC%9A%E7%94%B1%E6%88%90%E5%91%98%E5%8F%98%E9%87%8F%E5%8F%AF%E4%BB%A5%E8%AE%A1%E7%AE%97%E7%9A%84%E5%86%99%E5%9C%A8VO%E7%B1%BB%E4%B8%8A%E6%9B%B4%E4%BC%98%E9%9B%85/\",\"title\":\"一种计算更优雅的写法\",\"lang\":\"zh-CN\",\"frontmatter\":{\"description\":\"一种计算更优雅的写法 代码优化前： result.forEach(gjjd -&gt; { int jc = jcMap.getOrDefault(gjjd.getJddm(), 0); int xz = xzMap.getOrDefault(gjjd.getJddm(), 0); int zj = jc + xz; int fk = gjjd.getFk(); int wfk = gjjd.getWfk(); int fkTotal = fk + wfk; float fkl = (float) fk / fkTotal; DecimalFormat df = new DecimalFormat(\\\"0.00\\\"); df.setRoundingMode(RoundingMode.HALF_UP); // 计算反馈率、总计、未反馈数；翻译节点代码 gjjd.setFkl(fk == 0 || fkTotal == 0 ? \\\"0.00%\\\" : df.format(fkl * 100) + \\\"%\\\"); gjjd.setXz(xz); gjjd.setJc(jc); gjjd.setZj(zj); gjjd.setWfk(wfk); gjjd.setJdmc(JddmEnum.translateByCode(gjjd.getJddm())); });\",\"head\":[[\"meta\",{\"property\":\"og:url\",\"content\":\"https://mister-hope.github.io/%E6%9D%82%E8%AE%B0/%E5%B0%8F%E6%8A%80%E5%B7%A7%EF%BC%9A%E7%94%B1%E6%88%90%E5%91%98%E5%8F%98%E9%87%8F%E5%8F%AF%E4%BB%A5%E8%AE%A1%E7%AE%97%E7%9A%84%E5%86%99%E5%9C%A8VO%E7%B1%BB%E4%B8%8A%E6%9B%B4%E4%BC%98%E9%9B%85/\"}],[\"meta\",{\"property\":\"og:site_name\",\"content\":\"Jankin'Blog\"}],[\"meta\",{\"property\":\"og:title\",\"content\":\"一种计算更优雅的写法\"}],[\"meta\",{\"property\":\"og:description\",\"content\":\"一种计算更优雅的写法 代码优化前： result.forEach(gjjd -&gt; { int jc = jcMap.getOrDefault(gjjd.getJddm(), 0); int xz = xzMap.getOrDefault(gjjd.getJddm(), 0); int zj = jc + xz; int fk = gjjd.getFk(); int wfk = gjjd.getWfk(); int fkTotal = fk + wfk; float fkl = (float) fk / fkTotal; DecimalFormat df = new DecimalFormat(\\\"0.00\\\"); df.setRoundingMode(RoundingMode.HALF_UP); // 计算反馈率、总计、未反馈数；翻译节点代码 gjjd.setFkl(fk == 0 || fkTotal == 0 ? \\\"0.00%\\\" : df.format(fkl * 100) + \\\"%\\\"); gjjd.setXz(xz); gjjd.setJc(jc); gjjd.setZj(zj); gjjd.setWfk(wfk); gjjd.setJdmc(JddmEnum.translateByCode(gjjd.getJddm())); });\"}],[\"meta\",{\"property\":\"og:type\",\"content\":\"article\"}],[\"meta\",{\"property\":\"og:locale\",\"content\":\"zh-CN\"}],[\"meta\",{\"property\":\"article:author\",\"content\":\"JanKin Xie\"}],[\"script\",{\"type\":\"application/ld+json\"},\"{\\\"@context\\\":\\\"https://schema.org\\\",\\\"@type\\\":\\\"Article\\\",\\\"headline\\\":\\\"一种计算更优雅的写法\\\",\\\"image\\\":[\\\"\\\"],\\\"dateModified\\\":null,\\\"author\\\":[{\\\"@type\\\":\\\"Person\\\",\\\"name\\\":\\\"JanKin Xie\\\",\\\"url\\\":\\\"\\\"}]}\"]]},\"headers\":[],\"readingTime\":{\"minutes\":1,\"words\":301},\"filePathRelative\":\"杂记/小技巧：由成员变量可以计算的写在VO类上更优雅/README.md\",\"excerpt\":\"<h1> 一种计算更优雅的写法</h1>\\n<p>代码优化前：</p>\\n<div class=\\\"language-java line-numbers-mode\\\" data-ext=\\\"java\\\"><pre class=\\\"language-java\\\"><code>result<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">forEach</span><span class=\\\"token punctuation\\\">(</span>gjjd <span class=\\\"token operator\\\">-&gt;</span> <span class=\\\"token punctuation\\\">{</span>\\n            <span class=\\\"token keyword\\\">int</span> jc <span class=\\\"token operator\\\">=</span> jcMap<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">getOrDefault</span><span class=\\\"token punctuation\\\">(</span>gjjd<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">getJddm</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n            <span class=\\\"token keyword\\\">int</span> xz <span class=\\\"token operator\\\">=</span> xzMap<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">getOrDefault</span><span class=\\\"token punctuation\\\">(</span>gjjd<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">getJddm</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n            <span class=\\\"token keyword\\\">int</span> zj <span class=\\\"token operator\\\">=</span> jc <span class=\\\"token operator\\\">+</span> xz<span class=\\\"token punctuation\\\">;</span>\\n            <span class=\\\"token keyword\\\">int</span> fk <span class=\\\"token operator\\\">=</span> gjjd<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">getFk</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n            <span class=\\\"token keyword\\\">int</span> wfk <span class=\\\"token operator\\\">=</span> gjjd<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">getWfk</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n            <span class=\\\"token keyword\\\">int</span> fkTotal <span class=\\\"token operator\\\">=</span> fk <span class=\\\"token operator\\\">+</span> wfk<span class=\\\"token punctuation\\\">;</span>\\n            <span class=\\\"token keyword\\\">float</span> fkl <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">float</span><span class=\\\"token punctuation\\\">)</span> fk <span class=\\\"token operator\\\">/</span> fkTotal<span class=\\\"token punctuation\\\">;</span>\\n            <span class=\\\"token class-name\\\">DecimalFormat</span> df <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">DecimalFormat</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"0.00\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n            df<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">setRoundingMode</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token class-name\\\">RoundingMode</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token constant\\\">HALF_UP</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n            <span class=\\\"token comment\\\">// 计算反馈率、总计、未反馈数；翻译节点代码</span>\\n            gjjd<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">setFkl</span><span class=\\\"token punctuation\\\">(</span>fk <span class=\\\"token operator\\\">==</span> <span class=\\\"token number\\\">0</span> <span class=\\\"token operator\\\">||</span> fkTotal <span class=\\\"token operator\\\">==</span> <span class=\\\"token number\\\">0</span> <span class=\\\"token operator\\\">?</span> <span class=\\\"token string\\\">\\\"0.00%\\\"</span> <span class=\\\"token operator\\\">:</span> df<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">format</span><span class=\\\"token punctuation\\\">(</span>fkl <span class=\\\"token operator\\\">*</span> <span class=\\\"token number\\\">100</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">+</span> <span class=\\\"token string\\\">\\\"%\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n            gjjd<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">setXz</span><span class=\\\"token punctuation\\\">(</span>xz<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n            gjjd<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">setJc</span><span class=\\\"token punctuation\\\">(</span>jc<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n            gjjd<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">setZj</span><span class=\\\"token punctuation\\\">(</span>zj<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n            gjjd<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">setWfk</span><span class=\\\"token punctuation\\\">(</span>wfk<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n            gjjd<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">setJdmc</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token class-name\\\">JddmEnum</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">translateByCode</span><span class=\\\"token punctuation\\\">(</span>gjjd<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">getJddm</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n</code></pre><div class=\\\"line-numbers\\\" aria-hidden=\\\"true\\\"><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div></div></div>\",\"autoDesc\":true}")

if (import.meta.webpackHot) {
  import.meta.webpackHot.accept()
  if (__VUE_HMR_RUNTIME__.updatePageData) {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  }
}

if (import.meta.hot) {
  import.meta.hot.accept(({ data }) => {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  })
}
