export const data = JSON.parse("{\"key\":\"v-343517b3\",\"path\":\"/%E6%9D%82%E8%AE%B0/%E5%B0%8F%E6%8A%80%E5%B7%A7%EF%BC%9ASpringboot%E5%A4%9A%E6%95%B0%E6%8D%AE%E6%BA%90%E9%85%8D%E7%BD%AE/READEME.html\",\"title\":\"\",\"lang\":\"zh-CN\",\"frontmatter\":{\"description\":\"Springboot多数据源配置 其中jyh和zx是二选一的，使用@ConditionalOnProperty注解动态加载。 PS：一旦使用了多数据源切记包结构需要清晰，能区分出哪个包下面的逻辑与哪个库有关系。比如：某一个库直连方式改成了提供接口，能不能一下子区分出来要改哪些类 数据库一： package com.thunisoft.zbxc.config.datasource; import com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceBuilder; import lombok.Data; import org.apache.ibatis.session.SqlSessionFactory; import org.mybatis.spring.SqlSessionFactoryBean; import org.mybatis.spring.annotation.MapperScan; import org.springframework.beans.factory.annotation.Qualifier; import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty; import org.springframework.boot.context.properties.ConfigurationProperties; import org.springframework.context.annotation.Bean; import org.springframework.context.annotation.Configuration; import org.springframework.core.io.support.PathMatchingResourcePatternResolver; import org.springframework.jdbc.datasource.DataSourceTransactionManager; import javax.sql.DataSource; /** * jyhDataSourceConfig * * @Description 集约化数据源配置 * @author XieZhongCai * @date 2021/8/17 16:06 * @version v1.0.0 **/ @Data @Configuration @MapperScan(basePackages = JyhDataSourceConfig.PACKAGE, sqlSessionFactoryRef = \\\"jyhSqlSessionFactory\\\") @ConditionalOnProperty(value = \\\"zbxc.datasource.choose\\\", havingValue = \\\"jyh\\\", matchIfMissing = true) public class JyhDataSourceConfig { /** * dao层的包路径 */ static final String PACKAGE = \\\"com.thunisoft.zbxc.mappers.jyh\\\"; /** * mapper文件的相对路径 */ private static final String MAPPER_LOCATION = \\\"classpath:mappers/jyh/*.xml\\\"; /** * @return 集约化数据源 */ @Bean(name = \\\"jyhDataSource\\\") @ConfigurationProperties(prefix = \\\"spring.datasource.druid.jyh\\\") public DataSource jyhDataSource() { return DruidDataSourceBuilder.create().build(); } /** * 创建该数据源的事务管理 * @return 事务管理 */ @Bean(name = \\\"jyhTransactionManager\\\") public DataSourceTransactionManager jyhTransactionManager() { return new DataSourceTransactionManager(jyhDataSource()); } /** * 创建Mybatis的连接会话工厂实例 * @param jyhDataSource 数据源 * @return 会话工厂实例 * @throws Exception exception */ @Bean(name = \\\"jyhSqlSessionFactory\\\") public SqlSessionFactory jyhSqlSessionFactory(@Qualifier(\\\"jyhDataSource\\\") DataSource jyhDataSource) throws Exception { final SqlSessionFactoryBean sessionFactory = new SqlSessionFactoryBean(); // 设置数据源bean sessionFactory.setDataSource(jyhDataSource); sessionFactory.setMapperLocations(new PathMatchingResourcePatternResolver() // 设置mapper文件路径 .getResources(JyhDataSourceConfig.MAPPER_LOCATION)); return sessionFactory.getObject(); } }\",\"head\":[[\"meta\",{\"property\":\"og:url\",\"content\":\"https://mister-hope.github.io/%E6%9D%82%E8%AE%B0/%E5%B0%8F%E6%8A%80%E5%B7%A7%EF%BC%9ASpringboot%E5%A4%9A%E6%95%B0%E6%8D%AE%E6%BA%90%E9%85%8D%E7%BD%AE/READEME.html\"}],[\"meta\",{\"property\":\"og:site_name\",\"content\":\"Jankin'Blog\"}],[\"meta\",{\"property\":\"og:description\",\"content\":\"Springboot多数据源配置 其中jyh和zx是二选一的，使用@ConditionalOnProperty注解动态加载。 PS：一旦使用了多数据源切记包结构需要清晰，能区分出哪个包下面的逻辑与哪个库有关系。比如：某一个库直连方式改成了提供接口，能不能一下子区分出来要改哪些类 数据库一： package com.thunisoft.zbxc.config.datasource; import com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceBuilder; import lombok.Data; import org.apache.ibatis.session.SqlSessionFactory; import org.mybatis.spring.SqlSessionFactoryBean; import org.mybatis.spring.annotation.MapperScan; import org.springframework.beans.factory.annotation.Qualifier; import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty; import org.springframework.boot.context.properties.ConfigurationProperties; import org.springframework.context.annotation.Bean; import org.springframework.context.annotation.Configuration; import org.springframework.core.io.support.PathMatchingResourcePatternResolver; import org.springframework.jdbc.datasource.DataSourceTransactionManager; import javax.sql.DataSource; /** * jyhDataSourceConfig * * @Description 集约化数据源配置 * @author XieZhongCai * @date 2021/8/17 16:06 * @version v1.0.0 **/ @Data @Configuration @MapperScan(basePackages = JyhDataSourceConfig.PACKAGE, sqlSessionFactoryRef = \\\"jyhSqlSessionFactory\\\") @ConditionalOnProperty(value = \\\"zbxc.datasource.choose\\\", havingValue = \\\"jyh\\\", matchIfMissing = true) public class JyhDataSourceConfig { /** * dao层的包路径 */ static final String PACKAGE = \\\"com.thunisoft.zbxc.mappers.jyh\\\"; /** * mapper文件的相对路径 */ private static final String MAPPER_LOCATION = \\\"classpath:mappers/jyh/*.xml\\\"; /** * @return 集约化数据源 */ @Bean(name = \\\"jyhDataSource\\\") @ConfigurationProperties(prefix = \\\"spring.datasource.druid.jyh\\\") public DataSource jyhDataSource() { return DruidDataSourceBuilder.create().build(); } /** * 创建该数据源的事务管理 * @return 事务管理 */ @Bean(name = \\\"jyhTransactionManager\\\") public DataSourceTransactionManager jyhTransactionManager() { return new DataSourceTransactionManager(jyhDataSource()); } /** * 创建Mybatis的连接会话工厂实例 * @param jyhDataSource 数据源 * @return 会话工厂实例 * @throws Exception exception */ @Bean(name = \\\"jyhSqlSessionFactory\\\") public SqlSessionFactory jyhSqlSessionFactory(@Qualifier(\\\"jyhDataSource\\\") DataSource jyhDataSource) throws Exception { final SqlSessionFactoryBean sessionFactory = new SqlSessionFactoryBean(); // 设置数据源bean sessionFactory.setDataSource(jyhDataSource); sessionFactory.setMapperLocations(new PathMatchingResourcePatternResolver() // 设置mapper文件路径 .getResources(JyhDataSourceConfig.MAPPER_LOCATION)); return sessionFactory.getObject(); } }\"}],[\"meta\",{\"property\":\"og:type\",\"content\":\"article\"}],[\"meta\",{\"property\":\"og:locale\",\"content\":\"zh-CN\"}],[\"meta\",{\"property\":\"article:author\",\"content\":\"JanKin Xie\"}],[\"script\",{\"type\":\"application/ld+json\"},\"{\\\"@context\\\":\\\"https://schema.org\\\",\\\"@type\\\":\\\"Article\\\",\\\"headline\\\":\\\"\\\",\\\"image\\\":[\\\"\\\"],\\\"dateModified\\\":null,\\\"author\\\":[{\\\"@type\\\":\\\"Person\\\",\\\"name\\\":\\\"JanKin Xie\\\",\\\"url\\\":\\\"\\\"}]}\"]]},\"headers\":[{\"level\":3,\"title\":\"Springboot多数据源配置\",\"slug\":\"springboot多数据源配置\",\"link\":\"#springboot多数据源配置\",\"children\":[]}],\"readingTime\":{\"minutes\":4.67,\"words\":1400},\"filePathRelative\":\"杂记/小技巧：Springboot多数据源配置/READEME.md\",\"excerpt\":\"<h3> Springboot多数据源配置</h3>\\n<blockquote>\\n<p>其中jyh和zx是二选一的，使用@ConditionalOnProperty注解动态加载。</p>\\n<p>PS：一旦使用了多数据源切记包结构需要清晰，能区分出哪个包下面的逻辑与哪个库有关系。比如：某一个库直连方式改成了提供接口，能不能一下子区分出来要改哪些类</p>\\n</blockquote>\\n<p>数据库一：</p>\\n<div class=\\\"language-java line-numbers-mode\\\" data-ext=\\\"java\\\"><pre class=\\\"language-java\\\"><code><span class=\\\"token keyword\\\">package</span> <span class=\\\"token namespace\\\">com<span class=\\\"token punctuation\\\">.</span>thunisoft<span class=\\\"token punctuation\\\">.</span>zbxc<span class=\\\"token punctuation\\\">.</span>config<span class=\\\"token punctuation\\\">.</span>datasource</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token import\\\"><span class=\\\"token namespace\\\">com<span class=\\\"token punctuation\\\">.</span>alibaba<span class=\\\"token punctuation\\\">.</span>druid<span class=\\\"token punctuation\\\">.</span>spring<span class=\\\"token punctuation\\\">.</span>boot<span class=\\\"token punctuation\\\">.</span>autoconfigure<span class=\\\"token punctuation\\\">.</span></span><span class=\\\"token class-name\\\">DruidDataSourceBuilder</span></span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token import\\\"><span class=\\\"token namespace\\\">lombok<span class=\\\"token punctuation\\\">.</span></span><span class=\\\"token class-name\\\">Data</span></span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token import\\\"><span class=\\\"token namespace\\\">org<span class=\\\"token punctuation\\\">.</span>apache<span class=\\\"token punctuation\\\">.</span>ibatis<span class=\\\"token punctuation\\\">.</span>session<span class=\\\"token punctuation\\\">.</span></span><span class=\\\"token class-name\\\">SqlSessionFactory</span></span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token import\\\"><span class=\\\"token namespace\\\">org<span class=\\\"token punctuation\\\">.</span>mybatis<span class=\\\"token punctuation\\\">.</span>spring<span class=\\\"token punctuation\\\">.</span></span><span class=\\\"token class-name\\\">SqlSessionFactoryBean</span></span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token import\\\"><span class=\\\"token namespace\\\">org<span class=\\\"token punctuation\\\">.</span>mybatis<span class=\\\"token punctuation\\\">.</span>spring<span class=\\\"token punctuation\\\">.</span>annotation<span class=\\\"token punctuation\\\">.</span></span><span class=\\\"token class-name\\\">MapperScan</span></span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token import\\\"><span class=\\\"token namespace\\\">org<span class=\\\"token punctuation\\\">.</span>springframework<span class=\\\"token punctuation\\\">.</span>beans<span class=\\\"token punctuation\\\">.</span>factory<span class=\\\"token punctuation\\\">.</span>annotation<span class=\\\"token punctuation\\\">.</span></span><span class=\\\"token class-name\\\">Qualifier</span></span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token import\\\"><span class=\\\"token namespace\\\">org<span class=\\\"token punctuation\\\">.</span>springframework<span class=\\\"token punctuation\\\">.</span>boot<span class=\\\"token punctuation\\\">.</span>autoconfigure<span class=\\\"token punctuation\\\">.</span>condition<span class=\\\"token punctuation\\\">.</span></span><span class=\\\"token class-name\\\">ConditionalOnProperty</span></span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token import\\\"><span class=\\\"token namespace\\\">org<span class=\\\"token punctuation\\\">.</span>springframework<span class=\\\"token punctuation\\\">.</span>boot<span class=\\\"token punctuation\\\">.</span>context<span class=\\\"token punctuation\\\">.</span>properties<span class=\\\"token punctuation\\\">.</span></span><span class=\\\"token class-name\\\">ConfigurationProperties</span></span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token import\\\"><span class=\\\"token namespace\\\">org<span class=\\\"token punctuation\\\">.</span>springframework<span class=\\\"token punctuation\\\">.</span>context<span class=\\\"token punctuation\\\">.</span>annotation<span class=\\\"token punctuation\\\">.</span></span><span class=\\\"token class-name\\\">Bean</span></span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token import\\\"><span class=\\\"token namespace\\\">org<span class=\\\"token punctuation\\\">.</span>springframework<span class=\\\"token punctuation\\\">.</span>context<span class=\\\"token punctuation\\\">.</span>annotation<span class=\\\"token punctuation\\\">.</span></span><span class=\\\"token class-name\\\">Configuration</span></span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token import\\\"><span class=\\\"token namespace\\\">org<span class=\\\"token punctuation\\\">.</span>springframework<span class=\\\"token punctuation\\\">.</span>core<span class=\\\"token punctuation\\\">.</span>io<span class=\\\"token punctuation\\\">.</span>support<span class=\\\"token punctuation\\\">.</span></span><span class=\\\"token class-name\\\">PathMatchingResourcePatternResolver</span></span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token import\\\"><span class=\\\"token namespace\\\">org<span class=\\\"token punctuation\\\">.</span>springframework<span class=\\\"token punctuation\\\">.</span>jdbc<span class=\\\"token punctuation\\\">.</span>datasource<span class=\\\"token punctuation\\\">.</span></span><span class=\\\"token class-name\\\">DataSourceTransactionManager</span></span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token import\\\"><span class=\\\"token namespace\\\">javax<span class=\\\"token punctuation\\\">.</span>sql<span class=\\\"token punctuation\\\">.</span></span><span class=\\\"token class-name\\\">DataSource</span></span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token doc-comment comment\\\">/**\\n * jyhDataSourceConfig\\n *\\n * @Description 集约化数据源配置\\n * <span class=\\\"token keyword\\\">@author</span> XieZhongCai\\n * <span class=\\\"token keyword\\\">@date</span> 2021/8/17 16:06\\n * <span class=\\\"token keyword\\\">@version</span> v1.0.0\\n **/</span>\\n<span class=\\\"token annotation punctuation\\\">@Data</span>\\n<span class=\\\"token annotation punctuation\\\">@Configuration</span>\\n<span class=\\\"token annotation punctuation\\\">@MapperScan</span><span class=\\\"token punctuation\\\">(</span>basePackages <span class=\\\"token operator\\\">=</span> <span class=\\\"token class-name\\\">JyhDataSourceConfig</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token constant\\\">PACKAGE</span><span class=\\\"token punctuation\\\">,</span> sqlSessionFactoryRef <span class=\\\"token operator\\\">=</span> <span class=\\\"token string\\\">\\\"jyhSqlSessionFactory\\\"</span><span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token annotation punctuation\\\">@ConditionalOnProperty</span><span class=\\\"token punctuation\\\">(</span>value <span class=\\\"token operator\\\">=</span> <span class=\\\"token string\\\">\\\"zbxc.datasource.choose\\\"</span><span class=\\\"token punctuation\\\">,</span> havingValue <span class=\\\"token operator\\\">=</span> <span class=\\\"token string\\\">\\\"jyh\\\"</span><span class=\\\"token punctuation\\\">,</span> matchIfMissing <span class=\\\"token operator\\\">=</span> <span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token keyword\\\">public</span> <span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">JyhDataSourceConfig</span> <span class=\\\"token punctuation\\\">{</span>\\n\\n    <span class=\\\"token doc-comment comment\\\">/**\\n     * dao层的包路径\\n     */</span>\\n    <span class=\\\"token keyword\\\">static</span> <span class=\\\"token keyword\\\">final</span> <span class=\\\"token class-name\\\">String</span> <span class=\\\"token constant\\\">PACKAGE</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token string\\\">\\\"com.thunisoft.zbxc.mappers.jyh\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n\\n    <span class=\\\"token doc-comment comment\\\">/**\\n     * mapper文件的相对路径\\n     */</span>\\n    <span class=\\\"token keyword\\\">private</span> <span class=\\\"token keyword\\\">static</span> <span class=\\\"token keyword\\\">final</span> <span class=\\\"token class-name\\\">String</span> <span class=\\\"token constant\\\">MAPPER_LOCATION</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token string\\\">\\\"classpath:mappers/jyh/*.xml\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n\\n    <span class=\\\"token doc-comment comment\\\">/**\\n     * <span class=\\\"token keyword\\\">@return</span> 集约化数据源\\n     */</span>\\n    <span class=\\\"token annotation punctuation\\\">@Bean</span><span class=\\\"token punctuation\\\">(</span>name <span class=\\\"token operator\\\">=</span> <span class=\\\"token string\\\">\\\"jyhDataSource\\\"</span><span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token annotation punctuation\\\">@ConfigurationProperties</span><span class=\\\"token punctuation\\\">(</span>prefix <span class=\\\"token operator\\\">=</span> <span class=\\\"token string\\\">\\\"spring.datasource.druid.jyh\\\"</span><span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token keyword\\\">public</span> <span class=\\\"token class-name\\\">DataSource</span> <span class=\\\"token function\\\">jyhDataSource</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token keyword\\\">return</span> <span class=\\\"token class-name\\\">DruidDataSourceBuilder</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">create</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">build</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n\\n    <span class=\\\"token doc-comment comment\\\">/**\\n     * 创建该数据源的事务管理\\n     * <span class=\\\"token keyword\\\">@return</span> 事务管理\\n     */</span>\\n    <span class=\\\"token annotation punctuation\\\">@Bean</span><span class=\\\"token punctuation\\\">(</span>name <span class=\\\"token operator\\\">=</span> <span class=\\\"token string\\\">\\\"jyhTransactionManager\\\"</span><span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token keyword\\\">public</span> <span class=\\\"token class-name\\\">DataSourceTransactionManager</span> <span class=\\\"token function\\\">jyhTransactionManager</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token keyword\\\">return</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">DataSourceTransactionManager</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token function\\\">jyhDataSource</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n\\n    <span class=\\\"token doc-comment comment\\\">/**\\n     * 创建Mybatis的连接会话工厂实例\\n     * <span class=\\\"token keyword\\\">@param</span> <span class=\\\"token parameter\\\">jyhDataSource</span> 数据源\\n     * <span class=\\\"token keyword\\\">@return</span> 会话工厂实例\\n     * <span class=\\\"token keyword\\\">@throws</span> <span class=\\\"token reference\\\"><span class=\\\"token class-name\\\">Exception</span></span> exception\\n     */</span>\\n    <span class=\\\"token annotation punctuation\\\">@Bean</span><span class=\\\"token punctuation\\\">(</span>name <span class=\\\"token operator\\\">=</span> <span class=\\\"token string\\\">\\\"jyhSqlSessionFactory\\\"</span><span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token keyword\\\">public</span> <span class=\\\"token class-name\\\">SqlSessionFactory</span> <span class=\\\"token function\\\">jyhSqlSessionFactory</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token annotation punctuation\\\">@Qualifier</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"jyhDataSource\\\"</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token class-name\\\">DataSource</span> jyhDataSource<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token keyword\\\">throws</span> <span class=\\\"token class-name\\\">Exception</span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token keyword\\\">final</span> <span class=\\\"token class-name\\\">SqlSessionFactoryBean</span> sessionFactory <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">SqlSessionFactoryBean</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token comment\\\">// 设置数据源bean</span>\\n        sessionFactory<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">setDataSource</span><span class=\\\"token punctuation\\\">(</span>jyhDataSource<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        sessionFactory<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">setMapperLocations</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">PathMatchingResourcePatternResolver</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span>\\n                <span class=\\\"token comment\\\">// 设置mapper文件路径</span>\\n                <span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">getResources</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token class-name\\\">JyhDataSourceConfig</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token constant\\\">MAPPER_LOCATION</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n        <span class=\\\"token keyword\\\">return</span> sessionFactory<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">getObject</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n</code></pre><div class=\\\"line-numbers\\\" aria-hidden=\\\"true\\\"><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div></div></div>\",\"autoDesc\":true}")

if (import.meta.webpackHot) {
  import.meta.webpackHot.accept()
  if (__VUE_HMR_RUNTIME__.updatePageData) {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  }
}

if (import.meta.hot) {
  import.meta.hot.accept(({ data }) => {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  })
}
