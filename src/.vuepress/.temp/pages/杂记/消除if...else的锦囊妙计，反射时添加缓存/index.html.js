export const data = JSON.parse("{\"key\":\"v-aee7f904\",\"path\":\"/%E6%9D%82%E8%AE%B0/%E6%B6%88%E9%99%A4if...else%E7%9A%84%E9%94%A6%E5%9B%8A%E5%A6%99%E8%AE%A1%EF%BC%8C%E5%8F%8D%E5%B0%84%E6%97%B6%E6%B7%BB%E5%8A%A0%E7%BC%93%E5%AD%98/\",\"title\":\"消除if...else的锦囊妙计，反射时添加缓存\",\"lang\":\"zh-CN\",\"frontmatter\":{\"description\":\"消除if...else的锦囊妙计，反射时添加缓存 我们都知道通过反射创建对象实例，比使用new关键字要慢很多。 由此，不太建议在用户请求过来时，每次都通过反射实时创建实例。 有时候，为了代码的灵活性，又不得不用反射创建实例，这时该怎么办呢？ 答：加缓存。 先看以下代码 publicinterface IPay { void pay(); } @Service publicclass AliaPay implements IPay { @Override public void pay() { System.out.println(\\\"===发起支付宝支付===\\\"); } } @Service publicclass WeixinPay implements IPay { @Override public void pay() { System.out.println(\\\"===发起微信支付===\\\"); } } @Service publicclass JingDongPay implements IPay { @Override public void pay() { System.out.println(\\\"===发起京东支付===\\\"); } } @Service publicclass PayService { @Autowired private AliaPay aliaPay; @Autowired private WeixinPay weixinPay; @Autowired private JingDongPay jingDongPay; public void toPay(String code) { if (\\\"alia\\\".equals(code)) { aliaPay.pay(); } elseif (\\\"weixin\\\".equals(code)) { weixinPay.pay(); } elseif (\\\"jingdong\\\".equals(code)) { jingDongPay.pay(); } else { System.out.println(\\\"找不到支付方式\\\"); } } }\",\"head\":[[\"meta\",{\"property\":\"og:url\",\"content\":\"https://mister-hope.github.io/%E6%9D%82%E8%AE%B0/%E6%B6%88%E9%99%A4if...else%E7%9A%84%E9%94%A6%E5%9B%8A%E5%A6%99%E8%AE%A1%EF%BC%8C%E5%8F%8D%E5%B0%84%E6%97%B6%E6%B7%BB%E5%8A%A0%E7%BC%93%E5%AD%98/\"}],[\"meta\",{\"property\":\"og:site_name\",\"content\":\"Jankin'Blog\"}],[\"meta\",{\"property\":\"og:title\",\"content\":\"消除if...else的锦囊妙计，反射时添加缓存\"}],[\"meta\",{\"property\":\"og:description\",\"content\":\"消除if...else的锦囊妙计，反射时添加缓存 我们都知道通过反射创建对象实例，比使用new关键字要慢很多。 由此，不太建议在用户请求过来时，每次都通过反射实时创建实例。 有时候，为了代码的灵活性，又不得不用反射创建实例，这时该怎么办呢？ 答：加缓存。 先看以下代码 publicinterface IPay { void pay(); } @Service publicclass AliaPay implements IPay { @Override public void pay() { System.out.println(\\\"===发起支付宝支付===\\\"); } } @Service publicclass WeixinPay implements IPay { @Override public void pay() { System.out.println(\\\"===发起微信支付===\\\"); } } @Service publicclass JingDongPay implements IPay { @Override public void pay() { System.out.println(\\\"===发起京东支付===\\\"); } } @Service publicclass PayService { @Autowired private AliaPay aliaPay; @Autowired private WeixinPay weixinPay; @Autowired private JingDongPay jingDongPay; public void toPay(String code) { if (\\\"alia\\\".equals(code)) { aliaPay.pay(); } elseif (\\\"weixin\\\".equals(code)) { weixinPay.pay(); } elseif (\\\"jingdong\\\".equals(code)) { jingDongPay.pay(); } else { System.out.println(\\\"找不到支付方式\\\"); } } }\"}],[\"meta\",{\"property\":\"og:type\",\"content\":\"article\"}],[\"meta\",{\"property\":\"og:locale\",\"content\":\"zh-CN\"}],[\"meta\",{\"property\":\"article:author\",\"content\":\"JanKin Xie\"}],[\"script\",{\"type\":\"application/ld+json\"},\"{\\\"@context\\\":\\\"https://schema.org\\\",\\\"@type\\\":\\\"Article\\\",\\\"headline\\\":\\\"消除if...else的锦囊妙计，反射时添加缓存\\\",\\\"image\\\":[\\\"\\\"],\\\"dateModified\\\":null,\\\"author\\\":[{\\\"@type\\\":\\\"Person\\\",\\\"name\\\":\\\"JanKin Xie\\\",\\\"url\\\":\\\"\\\"}]}\"]]},\"headers\":[],\"readingTime\":{\"minutes\":2.33,\"words\":698},\"filePathRelative\":\"杂记/消除if...else的锦囊妙计，反射时添加缓存/README.md\",\"excerpt\":\"<h1> 消除if...else的锦囊妙计，反射时添加缓存</h1>\\n<p>我们都知道通过<code>反射</code>创建对象实例，比使用<code>new</code>关键字要慢很多。</p>\\n<p>由此，不太建议在用户请求过来时，每次都通过反射<code>实时</code>创建实例。</p>\\n<p>有时候，为了代码的灵活性，又不得不用反射创建实例，这时该怎么办呢？</p>\\n<p>答：加<code>缓存</code>。</p>\\n<p>先看以下代码</p>\\n<div class=\\\"language-java line-numbers-mode\\\" data-ext=\\\"java\\\"><pre class=\\\"language-java\\\"><code>publicinterface <span class=\\\"token class-name\\\">IPay</span> <span class=\\\"token punctuation\\\">{</span>  \\n    <span class=\\\"token keyword\\\">void</span> <span class=\\\"token function\\\">pay</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>  \\n<span class=\\\"token punctuation\\\">}</span>  \\n \\n<span class=\\\"token annotation punctuation\\\">@Service</span>\\npublicclass <span class=\\\"token class-name\\\">AliaPay</span> <span class=\\\"token keyword\\\">implements</span> <span class=\\\"token class-name\\\">IPay</span> <span class=\\\"token punctuation\\\">{</span>  \\n     <span class=\\\"token annotation punctuation\\\">@Override</span>\\n     <span class=\\\"token keyword\\\">public</span> <span class=\\\"token keyword\\\">void</span> <span class=\\\"token function\\\">pay</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>  \\n        <span class=\\\"token class-name\\\">System</span><span class=\\\"token punctuation\\\">.</span>out<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">println</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"===发起支付宝支付===\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>  \\n     <span class=\\\"token punctuation\\\">}</span>  \\n<span class=\\\"token punctuation\\\">}</span>  \\n \\n<span class=\\\"token annotation punctuation\\\">@Service</span>\\npublicclass <span class=\\\"token class-name\\\">WeixinPay</span> <span class=\\\"token keyword\\\">implements</span> <span class=\\\"token class-name\\\">IPay</span> <span class=\\\"token punctuation\\\">{</span>  \\n     <span class=\\\"token annotation punctuation\\\">@Override</span>\\n     <span class=\\\"token keyword\\\">public</span> <span class=\\\"token keyword\\\">void</span> <span class=\\\"token function\\\">pay</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>  \\n         <span class=\\\"token class-name\\\">System</span><span class=\\\"token punctuation\\\">.</span>out<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">println</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"===发起微信支付===\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>  \\n     <span class=\\\"token punctuation\\\">}</span>  \\n<span class=\\\"token punctuation\\\">}</span>  \\n  \\n<span class=\\\"token annotation punctuation\\\">@Service</span>\\npublicclass <span class=\\\"token class-name\\\">JingDongPay</span> <span class=\\\"token keyword\\\">implements</span> <span class=\\\"token class-name\\\">IPay</span> <span class=\\\"token punctuation\\\">{</span>  \\n     <span class=\\\"token annotation punctuation\\\">@Override</span>\\n     <span class=\\\"token keyword\\\">public</span> <span class=\\\"token keyword\\\">void</span> <span class=\\\"token function\\\">pay</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>  \\n        <span class=\\\"token class-name\\\">System</span><span class=\\\"token punctuation\\\">.</span>out<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">println</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"===发起京东支付===\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>  \\n     <span class=\\\"token punctuation\\\">}</span>  \\n<span class=\\\"token punctuation\\\">}</span>  \\n \\n<span class=\\\"token annotation punctuation\\\">@Service</span>\\npublicclass <span class=\\\"token class-name\\\">PayService</span> <span class=\\\"token punctuation\\\">{</span>  \\n     <span class=\\\"token annotation punctuation\\\">@Autowired</span>\\n     <span class=\\\"token keyword\\\">private</span> <span class=\\\"token class-name\\\">AliaPay</span> aliaPay<span class=\\\"token punctuation\\\">;</span>  \\n     <span class=\\\"token annotation punctuation\\\">@Autowired</span>\\n     <span class=\\\"token keyword\\\">private</span> <span class=\\\"token class-name\\\">WeixinPay</span> weixinPay<span class=\\\"token punctuation\\\">;</span>  \\n     <span class=\\\"token annotation punctuation\\\">@Autowired</span>\\n     <span class=\\\"token keyword\\\">private</span> <span class=\\\"token class-name\\\">JingDongPay</span> jingDongPay<span class=\\\"token punctuation\\\">;</span>  \\n    \\n   \\n     <span class=\\\"token keyword\\\">public</span> <span class=\\\"token keyword\\\">void</span> <span class=\\\"token function\\\">toPay</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token class-name\\\">String</span> code<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>  \\n         <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"alia\\\"</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">equals</span><span class=\\\"token punctuation\\\">(</span>code<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>  \\n             aliaPay<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">pay</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>  \\n         <span class=\\\"token punctuation\\\">}</span> elseif <span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"weixin\\\"</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">equals</span><span class=\\\"token punctuation\\\">(</span>code<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>  \\n              weixinPay<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">pay</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>  \\n         <span class=\\\"token punctuation\\\">}</span> elseif <span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"jingdong\\\"</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">equals</span><span class=\\\"token punctuation\\\">(</span>code<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>  \\n              jingDongPay<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">pay</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>  \\n         <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">else</span> <span class=\\\"token punctuation\\\">{</span>  \\n              <span class=\\\"token class-name\\\">System</span><span class=\\\"token punctuation\\\">.</span>out<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">println</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"找不到支付方式\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>  \\n         <span class=\\\"token punctuation\\\">}</span>  \\n     <span class=\\\"token punctuation\\\">}</span>  \\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre><div class=\\\"line-numbers\\\" aria-hidden=\\\"true\\\"><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div></div></div>\",\"autoDesc\":true}")

if (import.meta.webpackHot) {
  import.meta.webpackHot.accept()
  if (__VUE_HMR_RUNTIME__.updatePageData) {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  }
}

if (import.meta.hot) {
  import.meta.hot.accept(({ data }) => {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  })
}
