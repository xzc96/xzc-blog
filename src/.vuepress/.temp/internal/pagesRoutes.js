export const pagesRoutes = [
  ["v-184f4da6","/intro.html",{"v":"/assets/images/cover3.jpg","e":"<h1> 介绍页</h1>\n<p>将你的个人介绍和档案放置在此处。</p>\n","y":"a","t":"介绍页","i":"circle-info"},["/intro","/intro.md"]],
  ["v-8daa1a0e","/",{"y":"h","t":"博客主页","i":"home"},["/index.html","/README.md"]],
  ["v-2e3eac9e","/slides.html",{"e":"<!-- markdownlint-disable MD024 MD033 MD051 -->\n","y":"s","t":"幻灯片页","i":"person-chalkboard"},["/slides","/slides.md"]],
  ["v-4e65ec78","/demo/disable.html",{"c":["使用指南"],"g":["禁用"],"e":"<p>你可以通过设置页面的 Frontmatter，在页面禁用功能与布局。</p>\n","y":"a","t":"布局与功能禁用","i":"gears","O":3},["/demo/disable","/demo/disable.md"]],
  ["v-c151bf32","/demo/encrypt.html",{"c":["使用指南"],"g":["文章加密"],"n":true,"y":"a","t":"密码加密的文章","i":"lock"},["/demo/encrypt","/demo/encrypt.md"]],
  ["v-438ffe52","/demo/markdown.html",{"c":["使用指南"],"g":["Markdown"],"e":"<p>VuePress 主要从 Markdown 文件生成页面。因此，你可以使用它轻松生成文档或博客站点。</p>\n<p>你应该创建和编写 Markdown 文件，以便 VuePress 可以根据文件结构将它们转换为不同的页面。</p>\n","y":"a","t":"Markdown 展示","i":"fab fa-markdown","O":2},["/demo/markdown","/demo/markdown.md"]],
  ["v-6e19edb7","/demo/page.html",{"a":"Ms.Hope","d":1577836800000,"l":"2020年1月1日","c":["使用指南"],"g":["页面配置","使用指南"],"u":true,"v":"/assets/images/cover1.jpg","e":"<p><code>more</code> 注释之前的内容被视为文章摘要。</p>\n","y":"a","t":"页面配置","i":"file","O":1},["/demo/page","/demo/page.md"]],
  ["v-1473bf53","/demo/",{"c":["使用指南"],"e":"<h2> 目录</h2>\n<ul>\n<li>\n<p><a href=\"/demo/markdown.html\" target=\"blank\">Markdown 展示</a></p>\n</li>\n<li>\n<p><a href=\"/demo/page.html\" target=\"blank\">页面展示</a></p>\n</li>\n<li>\n<p><a href=\"/demo/disable.html\" target=\"blank\">禁用展示</a></p>\n</li>\n<li>\n<p><a href=\"/demo/encrypt.html\" target=\"blank\">加密展示</a></p>\n</li>\n</ul>","y":"a","t":"主要功能与配置演示","i":"laptop-code"},["/demo/index.html","/demo/README.md"]],
  ["v-2bc6566a","/posts/cherry.html",{"d":1641686400000,"l":"2022年1月9日","c":["樱桃"],"g":["红","小","圆"],"e":"<h1> 樱桃</h1>\n<h2> 标题 2</h2>\n<p>这里是内容。</p>\n<h3> 标题 3</h3>\n<p>这里是内容。</p>\n","y":"a","t":"樱桃","i":"pen-to-square"},["/posts/cherry","/posts/cherry.md"]],
  ["v-24b7c48d","/posts/dragonfruit.html",{"d":1641772800000,"l":"2022年1月10日","c":["火龙果","水果"],"g":["红","大"],"e":"<h1> 火龙果</h1>\n<h2> 标题 2</h2>\n<p>这里是内容。</p>\n<h3> 标题 3</h3>\n<p>这里是内容。</p>\n","y":"a","t":"火龙果","i":"pen-to-square"},["/posts/dragonfruit","/posts/dragonfruit.md"]],
  ["v-f0ec4556","/posts/strawberry.html",{"d":1641859200000,"l":"2022年1月11日","c":["水果","草莓"],"g":["红","小"],"e":"<h1> 草莓</h1>\n<h2> 标题 2</h2>\n<p>这里是内容。</p>\n<h3> 标题 3</h3>\n<p>这里是内容。</p>\n","y":"a","t":"草莓","i":"pen-to-square"},["/posts/strawberry","/posts/strawberry.md"]],
  ["v-df8b6e0c","/posts/tomato.html",{"d":1641945600000,"l":"2022年1月12日","c":["蔬菜"],"g":["红","圆"],"u":true,"v":"/assets/images/cover2.jpg","e":"<h1> 番茄</h1>\n<h2> 标题 2</h2>\n<p>这里是内容。</p>\n<h3> 标题 3</h3>\n<p>这里是内容。</p>\n","y":"a","t":"番茄","i":"pen-to-square"},["/posts/tomato","/posts/tomato.md"]],
  ["v-7bc55b0e","/%E6%9D%82%E8%AE%B0/",{"c":["使用指南"],"e":"<h2> 目录</h2>\n<ul>\n<li>\n<p><a href=\"/%E6%9D%82%E8%AE%B0/markdown.html\" target=\"blank\">Markdown 展示</a></p>\n</li>\n<li>\n<p><a href=\"/%E6%9D%82%E8%AE%B0/page.html\" target=\"blank\">页面展示</a></p>\n</li>\n<li>\n<p><a href=\"/%E6%9D%82%E8%AE%B0/disable.html\" target=\"blank\">禁用展示</a></p>\n</li>\n<li>\n<p><a href=\"/%E6%9D%82%E8%AE%B0/encrypt.html\" target=\"blank\">加密展示</a></p>\n</li>\n</ul>","y":"a","t":"主要功能与配置演示","i":"laptop-code"},["/杂记/","/%E6%9D%82%E8%AE%B0/index.html","/杂记/README.md","/%E6%9D%82%E8%AE%B0/README.md"]],
  ["v-67b8c712","/posts/apple/1.html",{"d":1640995200000,"l":"2022年1月1日","c":["苹果"],"g":["红","大","圆"],"e":"<h1> 苹果 1</h1>\n<h2> 标题 2</h2>\n<p>这里是内容。</p>\n<h3> 标题 3</h3>\n<p>这里是内容。</p>\n","y":"a","t":"苹果 1","i":"pen-to-square"},["/posts/apple/1","/posts/apple/1.md"]],
  ["v-696d9fb1","/posts/apple/2.html",{"d":1641081600000,"l":"2022年1月2日","c":["苹果"],"g":["红","大","圆"],"e":"<h1> 苹果 2</h1>\n<p>一个被星标了的苹果文章。</p>\n","y":"a","t":"苹果 2","i":"pen-to-square"},["/posts/apple/2","/posts/apple/2.md"]],
  ["v-6b227850","/posts/apple/3.html",{"d":1641168000000,"l":"2022年1月3日","c":["苹果","水果"],"g":["红","大","圆"],"e":"<h1> 苹果 3</h1>\n<h2> 标题 2</h2>\n<p>这里是内容。</p>\n<h3> 标题 3</h3>\n<p>这里是内容。</p>\n","y":"a","t":"苹果 3","i":"pen-to-square"},["/posts/apple/3","/posts/apple/3.md"]],
  ["v-6cd750ef","/posts/apple/4.html",{"d":1641254400000,"l":"2022年1月4日","c":["苹果","水果"],"g":["红","大","圆"],"e":"<h1> 苹果 4</h1>\n<h2> 标题 2</h2>\n<p>这里是内容。</p>\n<h3> 标题 3</h3>\n<p>这里是内容。</p>\n","y":"a","t":"苹果 4","i":"pen-to-square"},["/posts/apple/4","/posts/apple/4.md"]],
  ["v-7a07405d","/posts/banana/1.html",{"d":1641340800000,"l":"2022年1月5日","c":["香蕉","水果"],"g":["黄","弯曲的","长"],"e":"<h1> 香蕉 1</h1>\n<h2> 标题 2</h2>\n<p>这里是内容。</p>\n<h3> 标题 3</h3>\n<p>这里是内容。</p>\n","y":"a","t":"香蕉 1","i":"pen-to-square"},["/posts/banana/1","/posts/banana/1.md"]],
  ["v-7bbc18fc","/posts/banana/2.html",{"d":1641427200000,"l":"2022年1月6日","c":["香蕉","水果"],"g":["黄","弯曲的","长"],"e":"<h1> 香蕉 2</h1>\n<p>一个被数字 <code>10</code> 星标了的香蕉文章。</p>\n","y":"a","t":"香蕉 2","i":"pen-to-square"},["/posts/banana/2","/posts/banana/2.md"]],
  ["v-7d70f19b","/posts/banana/3.html",{"d":1641513600000,"l":"2022年1月7日","c":["香蕉"],"g":["黄","弯曲的","长"],"e":"<h1> 香蕉 3</h1>\n<h2> 标题 2</h2>\n<p>这里是内容。</p>\n<h3> 标题 3</h3>\n<p>这里是内容。</p>\n","y":"a","t":"香蕉 3","i":"pen-to-square"},["/posts/banana/3","/posts/banana/3.md"]],
  ["v-7f25ca3a","/posts/banana/4.html",{"d":1641600000000,"l":"2022年1月8日","c":["香蕉"],"g":["黄","弯曲的","长"],"e":"<h1> 香蕉 4</h1>\n<h2> 标题 2</h2>\n<p>这里是内容。</p>\n<h3> 标题 3</h3>\n<p>这里是内容。</p>\n","y":"a","t":"香蕉 4","i":"pen-to-square"},["/posts/banana/4","/posts/banana/4.md"]],
  ["v-0ebf36a9","/%E6%9D%82%E8%AE%B0/20%E7%9A%84%E4%B8%9A%E5%8A%A1%E4%BB%A3%E7%A0%81%E7%9A%84Spring%E5%A3%B0%E6%98%8E%E5%BC%8F%E4%BA%8B%E5%8A%A1%EF%BC%8C%E5%8F%AF%E8%83%BD%E9%83%BD%E6%B2%A1%E5%A4%84%E7%90%86%E6%AD%A3%E7%A1%AE/",{"e":"<h1> 20%的业务代码的Spring声明式事务，可能都没处理正确</h1>\n<p>主事务不会回滚，子事务回滚</p>\n","y":"a","t":"20%的业务代码的Spring声明式事务，可能都没处理正确"},["/杂记/20的业务代码的Spring声明式事务，可能都没处理正确/","/%E6%9D%82%E8%AE%B0/20%E7%9A%84%E4%B8%9A%E5%8A%A1%E4%BB%A3%E7%A0%81%E7%9A%84Spring%E5%A3%B0%E6%98%8E%E5%BC%8F%E4%BA%8B%E5%8A%A1%EF%BC%8C%E5%8F%AF%E8%83%BD%E9%83%BD%E6%B2%A1%E5%A4%84%E7%90%86%E6%AD%A3%E7%A1%AE/index.html","/杂记/20的业务代码的Spring声明式事务，可能都没处理正确/README.md","/%E6%9D%82%E8%AE%B0/20%E7%9A%84%E4%B8%9A%E5%8A%A1%E4%BB%A3%E7%A0%81%E7%9A%84Spring%E5%A3%B0%E6%98%8E%E5%BC%8F%E4%BA%8B%E5%8A%A1%EF%BC%8C%E5%8F%AF%E8%83%BD%E9%83%BD%E6%B2%A1%E5%A4%84%E7%90%86%E6%AD%A3%E7%A1%AE/README.md"]],
  ["v-c79cbb34","/%E6%9D%82%E8%AE%B0/@Retryable%E5%92%8C@Recover%E7%9A%84%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/",{"e":"<h1> @Retryable、@Recover</h1>\n<h2> 用来干啥的</h2>\n<p>给方法加上重试机制</p>\n<h2> @Retryable怎么使用</h2>\n<ol>\n<li>引入依赖，</li>\n</ol>\n<div class=\"language-xml line-numbers-mode\" data-ext=\"xml\"><pre class=\"language-xml\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">&gt;</span></span>org.springframework.retry<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">&gt;</span></span>spring-retry<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">&gt;</span></span>\n <span class=\"token comment\">&lt;!--该组件是依赖于 AOP--&gt;</span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">&gt;</span></span>org.springframework.boot<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">&gt;</span></span>spring-boot-starter-aop<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">&gt;</span></span>2.6.3<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>","y":"a","t":"@Retryable、@Recover"},["/杂记/@Retryable和@Recover的使用方法/","/%E6%9D%82%E8%AE%B0/@Retryable%E5%92%8C@Recover%E7%9A%84%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/index.html","/杂记/@Retryable和@Recover的使用方法/README.md","/%E6%9D%82%E8%AE%B0/@Retryable%E5%92%8C@Recover%E7%9A%84%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/README.md"]],
  ["v-8f2ae2ca","/%E6%9D%82%E8%AE%B0/ArteryBase%E4%B8%B4%E6%97%B6%E6%96%87%E4%BB%B6%E6%92%91%E7%88%86%E4%BA%86/",{"e":"<p>一个风和日丽的早上，测试在造数据的过程中，告诉我服务器磁盘空间不够了</p>\n<figure><figcaption>图片</figcaption></figure>\n<p>服务器不支持加这么多数据哦，加数据的过程中提示磁盘满了 是不是空间本来就很少了</p>\n<p>先算一下数据量大小，1亿4千万条，一个表算20个整型字段，也就10个G左右嘛</p>\n<ol>\n<li>第一步，先看整体磁盘空间。确实已经满了</li>\n</ol>\n<figure><figcaption>image-20230506105133267</figcaption></figure>\n<ol start=\"2\">\n<li>第二步，找到罪魁祸首</li>\n</ol>","y":"a","t":""},["/杂记/ArteryBase临时文件撑爆了/","/%E6%9D%82%E8%AE%B0/ArteryBase%E4%B8%B4%E6%97%B6%E6%96%87%E4%BB%B6%E6%92%91%E7%88%86%E4%BA%86/index.html","/杂记/ArteryBase临时文件撑爆了/README.md","/%E6%9D%82%E8%AE%B0/ArteryBase%E4%B8%B4%E6%97%B6%E6%96%87%E4%BB%B6%E6%92%91%E7%88%86%E4%BA%86/README.md"]],
  ["v-633f6c70","/%E6%9D%82%E8%AE%B0/AtomicInteger%E7%9A%84%E7%94%A8%E6%B3%95/",{"e":"<h2> 看下面这段代码有没有线程安全问题</h2>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><pre class=\"language-java\"><code><span class=\"token keyword\">package</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>thunisoft<span class=\"token punctuation\">.</span>zx<span class=\"token punctuation\">.</span>zxznglxt<span class=\"token punctuation\">.</span>znfx<span class=\"token punctuation\">.</span>impl</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token doc-comment comment\">/**\n * Example\n *\n * <span class=\"token keyword\">@description</span> TODO\n * <span class=\"token keyword\">@author</span> XieZhongCai\n * <span class=\"token keyword\">@date</span> 2023/5/5 14:55\n * <span class=\"token keyword\">@version</span> v1.0.2\n **/</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span>concurrent<span class=\"token punctuation\">.</span>atomic<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">AtomicInteger</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Example</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">AtomicInteger</span> refCount <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">AtomicInteger</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Thread \"</span> <span class=\"token operator\">+</span> <span class=\"token class-name\">Thread</span><span class=\"token punctuation\">.</span><span class=\"token function\">currentThread</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span><span class=\"token string\">\"进入时，refCount是\"</span> <span class=\"token operator\">+</span> refCount<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>refCount<span class=\"token punctuation\">.</span><span class=\"token function\">compareAndSet</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> refCount<span class=\"token punctuation\">.</span><span class=\"token function\">decrementAndGet</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Thread \"</span> <span class=\"token operator\">+</span> <span class=\"token class-name\">Thread</span><span class=\"token punctuation\">.</span><span class=\"token function\">currentThread</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\" entered if block\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Thread \"</span> <span class=\"token operator\">+</span> <span class=\"token class-name\">Thread</span><span class=\"token punctuation\">.</span><span class=\"token function\">currentThread</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\" did not enter if block\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Thread \"</span> <span class=\"token operator\">+</span> <span class=\"token class-name\">Thread</span><span class=\"token punctuation\">.</span><span class=\"token function\">currentThread</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span><span class=\"token string\">\"出去时，refCount是\"</span> <span class=\"token operator\">+</span> refCount<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">Example</span> example <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Example</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">new</span> <span class=\"token class-name\">Thread</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-&gt;</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token class-name\">Thread</span><span class=\"token punctuation\">.</span><span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">500</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 增加延时操作，使得线程间的竞争更明显</span>\n                    example<span class=\"token punctuation\">.</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">InterruptedException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>","y":"a","t":""},["/杂记/AtomicInteger的用法/","/%E6%9D%82%E8%AE%B0/AtomicInteger%E7%9A%84%E7%94%A8%E6%B3%95/index.html","/杂记/AtomicInteger的用法/README.md","/%E6%9D%82%E8%AE%B0/AtomicInteger%E7%9A%84%E7%94%A8%E6%B3%95/README.md"]],
  ["v-5051f6a4","/%E6%9D%82%E8%AE%B0/ehcache%E7%BC%93%E5%AD%98%E7%9A%84%E4%BD%BF%E7%94%A8/",{"e":"<h1> ehcache 和expiringMap的区别</h1>\n<p>Ehcache和ExpiringMap都是用于缓存数据的库，但是它们在实现上有一些不同之处：</p>\n<ol>\n<li>\n<p>存储方式：Ehcache使用磁盘或堆内存存储缓存数据，而ExpiringMap只使用堆内存存储缓存数据。</p>\n</li>\n<li>\n<p>缓存策略：Ehcache提供了多种缓存策略，例如FIFO、LRU、LFU和随机等，可以根据需求进行配置；而ExpiringMap只提供了基于时间过期的缓存策略。</p>\n</li>\n<li>\n<p>扩展性：Ehcache作为一个完整的缓存库，提供了大量的配置选项和插件，可以满足各种不同的需求；而ExpiringMap是一个轻量级的库，不提供很多高级的功能，适用于一些简单的缓存场景。</p>\n</li>\n<li>\n<p>性能：由于ExpiringMap只使用堆内存存储缓存数据，所以在处理大量数据时性能可能会受到影响；而Ehcache可以根据需求使用磁盘存储数据，可以处理更大的数据集。</p>\n</li>\n</ol>","y":"a","t":"ehcache 和expiringMap的区别"},["/杂记/ehcache缓存的使用/","/%E6%9D%82%E8%AE%B0/ehcache%E7%BC%93%E5%AD%98%E7%9A%84%E4%BD%BF%E7%94%A8/index.html","/杂记/ehcache缓存的使用/README.md","/%E6%9D%82%E8%AE%B0/ehcache%E7%BC%93%E5%AD%98%E7%9A%84%E4%BD%BF%E7%94%A8/README.md"]],
  ["v-39c95836","/%E6%9D%82%E8%AE%B0/ExpiringMap%EF%BC%9A%E8%BD%BB%E9%87%8F%E7%BA%A7%E7%9A%84Java%E7%BC%93%E5%AD%98%E6%96%B9%E5%BC%8F/",{"e":"<h1> ExpiringMap：轻量级的Java缓存方式</h1>\n<h3> 一、ExpiringMap</h3>\n<p>具有高性能、低开销、零依赖、线程安全、使用 ConcurrentMap 的实现过期 entries 等优点。<br>\n其主要特点包括：过期策略、可变有效期、最大尺寸、侦听器过期、延迟输入加载、过期自省等。</p>\n<h3> 二、基本功能</h3>\n<p>1、可设置 Map 中的 Entry 在一段时间后自动过期。</p>\n<p>2、可设置 Map 最大容纳值，当到达 Maximum size 后，再次插入值会导致 Map 中的第一个值过期。</p>\n<p>3、可添加监听事件，在监听到 Entry 过期时调度监听函数。</p>","y":"a","t":"ExpiringMap：轻量级的Java缓存方式"},["/杂记/ExpiringMap：轻量级的Java缓存方式/","/%E6%9D%82%E8%AE%B0/ExpiringMap%EF%BC%9A%E8%BD%BB%E9%87%8F%E7%BA%A7%E7%9A%84Java%E7%BC%93%E5%AD%98%E6%96%B9%E5%BC%8F/index.html","/杂记/ExpiringMap：轻量级的Java缓存方式/README.md","/%E6%9D%82%E8%AE%B0/ExpiringMap%EF%BC%9A%E8%BD%BB%E9%87%8F%E7%BA%A7%E7%9A%84Java%E7%BC%93%E5%AD%98%E6%96%B9%E5%BC%8F/README.md"]],
  ["v-31bcaa60","/%E6%9D%82%E8%AE%B0/HTTP%E8%B0%83%E7%94%A8%EF%BC%9A%E4%BD%A0%E8%80%83%E8%99%91%E5%88%B0%E8%B6%85%E6%97%B6%E3%80%81%E9%87%8D%E8%AF%95%E3%80%81%E5%B9%B6%E5%8F%91%E4%BA%86%E5%90%97%EF%BC%9F/",{"e":"<p>今天，我们一起聊聊进行 HTTP 调用需要注意的超时、重试、并发等问题。</p>\n<p>与执行本地方法不同，进行 HTTP 调用本质上是通过 HTTP 协议进行一次网络请求。网络请求必然有超时的可能性，因此我们必须考虑到这三点：</p>\n<p>首先，框架设置的默认超时是否合理；</p>\n<p>其次，考虑到网络的不稳定，超时后的请求重试是一个不错的选择，但需要考虑服务端接口的幂等性设计是否允许我们重试；</p>\n<p>最后，需要考虑框架是否会像浏览器那样限制并发连接数，以免在服务并发很大的情况下，<strong>HTTP</strong> 调用的并发数限制成为瓶颈。</p>\n<p><strong>Spring Cloud</strong> 是 <strong>Java</strong> 微服务架构的代表性框架。如果使用 <strong>Spring Cloud</strong> 进行微服务开发，就会使用 <strong>Feign</strong> 进行声明式的服务调用。如果不使用 <strong>Spring Cloud</strong>，而直接使用 <strong>Spring Boot</strong> 进行微服务开发的话，可能会直接使用 <strong>Java</strong> 中最常用的 <strong>HTTP</strong> 客户端 <strong>Apache HttpClient</strong> 进行服务调用。</p>","y":"a","t":""},["/杂记/HTTP调用：你考虑到超时、重试、并发了吗？/","/%E6%9D%82%E8%AE%B0/HTTP%E8%B0%83%E7%94%A8%EF%BC%9A%E4%BD%A0%E8%80%83%E8%99%91%E5%88%B0%E8%B6%85%E6%97%B6%E3%80%81%E9%87%8D%E8%AF%95%E3%80%81%E5%B9%B6%E5%8F%91%E4%BA%86%E5%90%97%EF%BC%9F/index.html","/杂记/HTTP调用：你考虑到超时、重试、并发了吗？/README.md","/%E6%9D%82%E8%AE%B0/HTTP%E8%B0%83%E7%94%A8%EF%BC%9A%E4%BD%A0%E8%80%83%E8%99%91%E5%88%B0%E8%B6%85%E6%97%B6%E3%80%81%E9%87%8D%E8%AF%95%E3%80%81%E5%B9%B6%E5%8F%91%E4%BA%86%E5%90%97%EF%BC%9F/README.md"]],
  ["v-ddc6d98c","/%E6%9D%82%E8%AE%B0/Idea%E5%8D%A0%E7%94%A8CPU%E8%BF%87%E9%AB%98%E5%8D%A1%E9%A1%BF/",{"e":"<h1> idea占用CPU过高解决办法</h1>\n<p>打开监控页面，发现JIT即使编辑占大头，这也解释了为什么每当我在修改新的代码文件的内容时 CPU 占用率飙升，因为 JIT Compiler 即时编译将 class 文件编译成本地机器代码占用了大量的 CPU 资源导致的卡顿</p>\n<figure><figcaption>image-20230313110106520</figcaption></figure>\n<p>解决办法：</p>\n<figure><figcaption>image-20230313110359683</figcaption></figure>\n<div class=\"language-text line-numbers-mode\" data-ext=\"text\"><pre class=\"language-text\"><code># 堆栈设置\n\n-Xms2048m\n-Xmx4096m\n-Xverify:none\n-XX:+DisableExplicitGC\n-XX:ReservedCodeCacheSize=720m\n-XX:+UseConcMarkSweepGC\n-XX:SoftRefLRUPolicyMSPerMB=50\n-ea\n-Dsun.io.useCanonCaches=false\n-Djava.net.preferIPv4Stack=true\n-Djdk.http.auth.tunneling.disabledSchemes=\"\"\n-XX:+HeapDumpOnOutOfMemoryError\n-XX:-OmitStackTraceInFastThrow\n\n# JIT 参数\n\n# 设置用于编译的编译器线程数\n-XX:CICompilerCount=2\n# 开启分层编译\n-XX:TieredStopAtLevel=1\n# 控制最大数量嵌套调用内联\n-XX:MaxInlineLevel=3\n# 即时编译的东西（没弄懂...）\n-XX:Tier4MinInvocationThreshold=100000\n-XX:Tier4InvocationThreshold=110000\n-XX:Tier4CompileThreshold=120000\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>","y":"a","t":"idea占用CPU过高解决办法"},["/杂记/Idea占用CPU过高卡顿/","/%E6%9D%82%E8%AE%B0/Idea%E5%8D%A0%E7%94%A8CPU%E8%BF%87%E9%AB%98%E5%8D%A1%E9%A1%BF/index.html","/杂记/Idea占用CPU过高卡顿/README.md","/%E6%9D%82%E8%AE%B0/Idea%E5%8D%A0%E7%94%A8CPU%E8%BF%87%E9%AB%98%E5%8D%A1%E9%A1%BF/README.md"]],
  ["v-0732a0ec","/%E6%9D%82%E8%AE%B0/Java%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E8%B4%A3%E4%BB%BB%E9%93%BE%E6%A8%A1%E5%BC%8F%E5%AE%9E%E6%88%98/",{"e":"<p>项目背景：巡查系统，对案件的各个办案环节进行校验，将规则抽象成方法用责任链模式串起来。</p>\n","y":"a","t":""},["/杂记/Java设计模式之责任链模式实战/","/%E6%9D%82%E8%AE%B0/Java%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E8%B4%A3%E4%BB%BB%E9%93%BE%E6%A8%A1%E5%BC%8F%E5%AE%9E%E6%88%98/index.html","/杂记/Java设计模式之责任链模式实战/README.md","/%E6%9D%82%E8%AE%B0/Java%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E8%B4%A3%E4%BB%BB%E9%93%BE%E6%A8%A1%E5%BC%8F%E5%AE%9E%E6%88%98/README.md"]],
  ["v-ebf023e8","/%E6%9D%82%E8%AE%B0/Linux%E5%91%BD%E4%BB%A4/",{"e":"<p>用户名删除</p>\n<p>userdel -r+用户名即可删除</p>\n<p>场景：centos上java dump文件很大，有5个G，内网情况需要光盘传输，没那么多空间且传输速度慢</p>\n<p>思路：拆分压缩</p>\n<p>拆分压缩：</p>\n<p>要将一个6GB的java.hprof文件分割成每个1GB，并压缩这些分割后的文件，您可以按照以下步骤进行操作：</p>\n<ol>\n<li>\n<p>安装split命令（如果您尚未安装）：</p>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><pre class=\"language-bash\"><code><span class=\"token function\">sudo</span> yum <span class=\"token function\">install</span> coreutils\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div></li>\n<li>\n<p>使用split命令将文件分割成1GB的块：</p>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><pre class=\"language-bash\"><code><span class=\"token function\">split</span> <span class=\"token parameter variable\">-b</span> 1G java.hprof java_part\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><p>这将生成多个名为<code>java_partaa</code>, <code>java_partab</code>, <code>java_partac</code>等的文件，每个文件大小为1GB。</p>\n</li>\n<li>\n<p>压缩这些分割后的文件：</p>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><pre class=\"language-bash\"><code><span class=\"token function\">tar</span> <span class=\"token parameter variable\">-czvf</span> java_parts.tar.gz java_part*\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><p>这将创建一个名为<code>java_parts.tar.gz</code>的压缩文件，其中包含所有分割后的文件。</p>\n</li>\n</ol>","y":"a","t":""},["/杂记/Linux命令/","/%E6%9D%82%E8%AE%B0/Linux%E5%91%BD%E4%BB%A4/index.html","/杂记/Linux命令/README.md","/%E6%9D%82%E8%AE%B0/Linux%E5%91%BD%E4%BB%A4/README.md"]],
  ["v-fca004fa","/%E6%9D%82%E8%AE%B0/PostgreSql%E3%80%81SqlServer%E5%B0%8F%E6%8A%80%E5%B7%A7%EF%BC%9ATop5%E6%8E%92%E5%90%8D/PostgreSql%E3%80%81SqlServer%E5%B0%8F%E6%8A%80%E5%B7%A7%EF%BC%9ATop5%E6%8E%92%E5%90%8D.html",{"e":"<p>PostgreSql、SqlServer小技巧：Top5排名</p>\n<p>总结：</p>\n<p>RANK() OVER( PARTITION BY class order by score desc) 并列第一，没有第二名；</p>\n<p>DENSE RANK() OVER(PARTITION BY class order by score desc)并列第一，有第二名；</p>\n<p>ROW_NUMBER() OVER(PARTITION BY class order by score desc) 没有并列第一；</p>\n<h3> rank()</h3>\n<div class=\"language-sql line-numbers-mode\" data-ext=\"sql\"><pre class=\"language-sql\"><code><span class=\"token keyword\">select</span> jddm<span class=\"token punctuation\">,</span> times dbcs<span class=\"token punctuation\">,</span> dr xh<span class=\"token punctuation\">,</span> <span class=\"token string\">'2'</span> tjlx\n        <span class=\"token keyword\">from</span> <span class=\"token punctuation\">(</span>\n             <span class=\"token keyword\">select</span> jddm<span class=\"token punctuation\">,</span> times<span class=\"token punctuation\">,</span> rank<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">over</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">order</span> <span class=\"token keyword\">by</span> times <span class=\"token keyword\">desc</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> dr\n             <span class=\"token keyword\">from</span> <span class=\"token punctuation\">(</span>\n                  <span class=\"token keyword\">select</span> c_jddm jddm<span class=\"token punctuation\">,</span> <span class=\"token function\">count</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> times\n                  <span class=\"token keyword\">from</span> db_ywzx<span class=\"token punctuation\">.</span>t_zx_cdbjl\n                  <span class=\"token keyword\">where</span> c_jdlx <span class=\"token operator\">=</span> <span class=\"token string\">'1'</span>\n\n                  <span class=\"token operator\">and</span> dt_cjsj <span class=\"token operator\">between</span> <span class=\"token string\">'2022-02-16 14:29:34'</span> <span class=\"token operator\">and</span> <span class=\"token string\">'2023-02-16 14:29:34'</span>\n                  <span class=\"token keyword\">group</span> <span class=\"token keyword\">by</span> c_jddm<span class=\"token punctuation\">)</span> m\n             <span class=\"token punctuation\">)</span> n\n        <span class=\"token keyword\">where</span> dr  <span class=\"token operator\">&lt;=</span> <span class=\"token number\">5</span>\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>","y":"a","t":""},["/杂记/PostgreSql、SqlServer小技巧：Top5排名/PostgreSql、SqlServer小技巧：Top5排名.html","/%E6%9D%82%E8%AE%B0/PostgreSql%E3%80%81SqlServer%E5%B0%8F%E6%8A%80%E5%B7%A7%EF%BC%9ATop5%E6%8E%92%E5%90%8D/PostgreSql%E3%80%81SqlServer%E5%B0%8F%E6%8A%80%E5%B7%A7%EF%BC%9ATop5%E6%8E%92%E5%90%8D","/杂记/PostgreSql、SqlServer小技巧：Top5排名/PostgreSql、SqlServer小技巧：Top5排名.md","/%E6%9D%82%E8%AE%B0/PostgreSql%E3%80%81SqlServer%E5%B0%8F%E6%8A%80%E5%B7%A7%EF%BC%9ATop5%E6%8E%92%E5%90%8D/PostgreSql%E3%80%81SqlServer%E5%B0%8F%E6%8A%80%E5%B7%A7%EF%BC%9ATop5%E6%8E%92%E5%90%8D.md"]],
  ["v-6ea4386e","/%E6%9D%82%E8%AE%B0/ThreadLocal%E5%B7%A5%E5%85%B7%E7%B1%BB%E7%9A%84%E4%BD%BF%E7%94%A8/",{"e":"<h3> ThreadLocal工具类</h3>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><pre class=\"language-java\"><code><span class=\"token keyword\">package</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>thunisoft<span class=\"token punctuation\">.</span>zbxc<span class=\"token punctuation\">.</span>util</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">lombok<span class=\"token punctuation\">.</span>experimental<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">UtilityClass</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">HashMap</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Map</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Optional</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token doc-comment comment\">/**\n * ThreadLocalUtil\n *\n * @Description ThreadLocalUtil工具类\n * <span class=\"token keyword\">@author</span> XieZhongCai\n * <span class=\"token keyword\">@date</span> 2021/8/18 15:54\n * <span class=\"token keyword\">@version</span> v1.0.0\n **/</span>\n<span class=\"token annotation punctuation\">@UtilityClass</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ThreadLocalUtil</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">ThreadLocal</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Map</span><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">&gt;</span><span class=\"token punctuation\">&gt;</span></span> <span class=\"token constant\">THREAD_LOCAL</span> <span class=\"token operator\">=</span> <span class=\"token class-name\">ThreadLocal</span><span class=\"token punctuation\">.</span><span class=\"token function\">withInitial</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-&gt;</span>\n            <span class=\"token keyword\">new</span> <span class=\"token class-name\">HashMap</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token doc-comment comment\">/**\n     * 获取所有\n     * <span class=\"token keyword\">@return</span> 获取所有\n     */</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">Map</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">&gt;</span></span> <span class=\"token function\">getThreadLocal</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token constant\">THREAD_LOCAL</span><span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token doc-comment comment\">/**\n     * 获取threadLocal中的对象\n     * <span class=\"token keyword\">@param</span> <span class=\"token parameter\">key</span> key\n     * <span class=\"token keyword\">@return</span> 获取threadLocal中的对象\n     */</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">T</span><span class=\"token punctuation\">&gt;</span></span> <span class=\"token class-name\">T</span> <span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> key<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token function\">get</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token doc-comment comment\">/**\n     * 获取threadLocal中的对象，赋予默认值\n     * <span class=\"token keyword\">@param</span> <span class=\"token parameter\">key</span> key\n     * <span class=\"token keyword\">@param</span> <span class=\"token parameter\">defaultValue</span> 默认值\n     * <span class=\"token keyword\">@return</span> T\n     */</span>\n    <span class=\"token annotation punctuation\">@SuppressWarnings</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"unchecked\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">T</span><span class=\"token punctuation\">&gt;</span></span> <span class=\"token class-name\">T</span> <span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> key<span class=\"token punctuation\">,</span> <span class=\"token class-name\">T</span> defaultValue<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">Map</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">&gt;</span></span> map <span class=\"token operator\">=</span> <span class=\"token constant\">THREAD_LOCAL</span><span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">T</span><span class=\"token punctuation\">)</span> <span class=\"token class-name\">Optional</span><span class=\"token punctuation\">.</span><span class=\"token function\">ofNullable</span><span class=\"token punctuation\">(</span>map<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">orElse</span><span class=\"token punctuation\">(</span>defaultValue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token doc-comment comment\">/**\n     * 存放值\n     * <span class=\"token keyword\">@param</span> <span class=\"token parameter\">key</span> key\n     * <span class=\"token keyword\">@param</span> <span class=\"token parameter\">value</span> value\n     */</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> key<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Object</span> value<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">Map</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">&gt;</span></span> map <span class=\"token operator\">=</span> <span class=\"token constant\">THREAD_LOCAL</span><span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        map<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token doc-comment comment\">/**\n     * 设置整个Map\n     * <span class=\"token keyword\">@param</span> <span class=\"token parameter\">keyValueMap</span> 整个Map\n     */</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Map</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">&gt;</span></span> keyValueMap<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">Map</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">&gt;</span></span> map <span class=\"token operator\">=</span> <span class=\"token constant\">THREAD_LOCAL</span><span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        map<span class=\"token punctuation\">.</span><span class=\"token function\">putAll</span><span class=\"token punctuation\">(</span>keyValueMap<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token doc-comment comment\">/**\n     * 清空ThreadLocal\n     */</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token constant\">THREAD_LOCAL</span><span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token doc-comment comment\">/**\n     * 清楚某个key\n     * <span class=\"token keyword\">@param</span> <span class=\"token parameter\">key</span> key\n     * <span class=\"token keyword\">@return</span> T\n     */</span>\n    <span class=\"token annotation punctuation\">@SuppressWarnings</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"unchecked\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">T</span><span class=\"token punctuation\">&gt;</span></span> <span class=\"token class-name\">T</span> <span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> key<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">Map</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">&gt;</span></span> map <span class=\"token operator\">=</span> <span class=\"token constant\">THREAD_LOCAL</span><span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">T</span><span class=\"token punctuation\">)</span> map<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>","y":"a","t":""},["/杂记/ThreadLocal工具类的使用/","/%E6%9D%82%E8%AE%B0/ThreadLocal%E5%B7%A5%E5%85%B7%E7%B1%BB%E7%9A%84%E4%BD%BF%E7%94%A8/index.html","/杂记/ThreadLocal工具类的使用/README.md","/%E6%9D%82%E8%AE%B0/ThreadLocal%E5%B7%A5%E5%85%B7%E7%B1%BB%E7%9A%84%E4%BD%BF%E7%94%A8/README.md"]],
  ["v-46aba8e3","/%E6%9D%82%E8%AE%B0/%E5%87%BD%E6%95%B0%E6%8E%A5%E5%8F%A3%E7%BC%96%E7%A8%8B/%E5%87%BD%E6%95%B0%E6%8E%A5%E5%8F%A3%E7%BC%96%E7%A8%8B.html",{"e":"<h1> 函数接口编程</h1>\n<p>有一个注解<code>@FunctionalInterface</code>，只能标注在函数式接口上面</p>\n<p>jdk1.8源码下面的tr.jar包下面的java.util.function</p>\n<p>里面基本都是函数式接口列举几个必须非常熟悉掌握的：</p>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><pre class=\"language-java\"><code><span class=\"token class-name\">Supplier</span> 代表一个输出 \n<span class=\"token class-name\">Consumer</span> 代表一个输入 \n<span class=\"token class-name\">BiConsumer</span> 代表两个输入 \n<span class=\"token class-name\">Function</span> 代表一个输入，一个输出（一般输入和输出是不同类型的） \n<span class=\"token class-name\">UnaryOperator</span> 代表一个输入，一个输出（输入和输出是相同类型的） \n<span class=\"token class-name\">BiFunction</span> 代表两个输入，一个输出（一般输入和输出是不同类型的） \n<span class=\"token class-name\">BinaryOperator</span> 代表两个输入，一个输出（输入和输出是相同类型的）\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>","y":"a","t":"函数接口编程"},["/杂记/函数接口编程/函数接口编程.html","/%E6%9D%82%E8%AE%B0/%E5%87%BD%E6%95%B0%E6%8E%A5%E5%8F%A3%E7%BC%96%E7%A8%8B/%E5%87%BD%E6%95%B0%E6%8E%A5%E5%8F%A3%E7%BC%96%E7%A8%8B","/杂记/函数接口编程/函数接口编程.md","/%E6%9D%82%E8%AE%B0/%E5%87%BD%E6%95%B0%E6%8E%A5%E5%8F%A3%E7%BC%96%E7%A8%8B/%E5%87%BD%E6%95%B0%E6%8E%A5%E5%8F%A3%E7%BC%96%E7%A8%8B.md"]],
  ["v-5fa67d1c","/%E6%9D%82%E8%AE%B0/%E5%A6%82%E4%BD%95%E5%86%99%E4%B8%80%E4%B8%AA%E6%8A%BD%E5%8F%96%E6%95%B0%E6%8D%AE%E7%9A%84%E4%B8%8A%E5%B1%82%E6%8E%A5%E5%8F%A3/",{"e":"<p>如何写一个抽取数据的上层接口</p>\n<p>需要考虑哪些因素：</p>\n<ul>\n<li>抽数得考虑成功与否，失败了考虑重试需要一个同步状态去记录</li>\n<li>抽数不应该按照当天日期去拿数据，应该是一个时间段，上一次成功的同步结束时间到当前时间，避免遗漏数据</li>\n<li>如果数据量特别多，考虑使用多线程，避免客户使用系统时间段同步，影响访问速度</li>\n<li>将数据查询到内存中，记得分页，避免oom</li>\n<li>小细节：做in查询的时候，小心拼接超长也要分页</li>\n</ul>\n<p>用一张表去记录，表结构：</p>\n<p>表名: db_ywzx.t_zx_sjtbjl</p>","y":"a","t":""},["/杂记/如何写一个抽取数据的上层接口/","/%E6%9D%82%E8%AE%B0/%E5%A6%82%E4%BD%95%E5%86%99%E4%B8%80%E4%B8%AA%E6%8A%BD%E5%8F%96%E6%95%B0%E6%8D%AE%E7%9A%84%E4%B8%8A%E5%B1%82%E6%8E%A5%E5%8F%A3/index.html","/杂记/如何写一个抽取数据的上层接口/README.md","/%E6%9D%82%E8%AE%B0/%E5%A6%82%E4%BD%95%E5%86%99%E4%B8%80%E4%B8%AA%E6%8A%BD%E5%8F%96%E6%95%B0%E6%8D%AE%E7%9A%84%E4%B8%8A%E5%B1%82%E6%8E%A5%E5%8F%A3/README.md"]],
  ["v-51f1a186","/%E6%9D%82%E8%AE%B0/%E5%A6%82%E6%9E%9C%E7%94%A8ConcurrentHashMap%E5%81%9A%E4%B8%80%E4%B8%AA%E7%BC%93%E5%AD%98%E7%B1%BB/",{"e":"<h1> 如何用ConcurrentHashMap做一个缓存类</h1>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><pre class=\"language-java\"><code><span class=\"token keyword\">package</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>thunisoft<span class=\"token punctuation\">.</span>zbxc<span class=\"token punctuation\">.</span>util</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">com<span class=\"token punctuation\">.</span>thunisoft<span class=\"token punctuation\">.</span>zbxc<span class=\"token punctuation\">.</span>enums<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">JyhEnum</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">com<span class=\"token punctuation\">.</span>thunisoft<span class=\"token punctuation\">.</span>zbxc<span class=\"token punctuation\">.</span>models<span class=\"token punctuation\">.</span>local<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Hcgz</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">com<span class=\"token punctuation\">.</span>thunisoft<span class=\"token punctuation\">.</span>zbxc<span class=\"token punctuation\">.</span>service<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">HcgzService</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">com<span class=\"token punctuation\">.</span>thunisoft<span class=\"token punctuation\">.</span>zbxc<span class=\"token punctuation\">.</span>service<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">JajyContext</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">lombok<span class=\"token punctuation\">.</span>extern<span class=\"token punctuation\">.</span>slf4j<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Slf4j</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>stereotype<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Component</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">javax<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">PostConstruct</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">javax<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Resource</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">List</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Map</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span>concurrent<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ConcurrentHashMap</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span>stream<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Collectors</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token doc-comment comment\">/**\n * GzCaCheUtil\n *\n * @Description 规则缓存类\n * <span class=\"token keyword\">@author</span> XieZhongCai\n * <span class=\"token keyword\">@date</span> 2022/1/13 15:16\n * <span class=\"token keyword\">@version</span> v2.0.1\n **/</span>\n<span class=\"token annotation punctuation\">@Component</span>\n<span class=\"token annotation punctuation\">@Slf4j</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">GzCaCheUtil</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token annotation punctuation\">@Resource</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">HcgzService</span> service<span class=\"token punctuation\">;</span>\n\n    <span class=\"token annotation punctuation\">@Resource</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">JajyContext</span> context<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">HcgzService</span> hcgzService<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">JajyContext</span> jajyContext<span class=\"token punctuation\">;</span>\n\n\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">Map</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Map</span><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">List</span><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Hcgz</span><span class=\"token punctuation\">&gt;</span><span class=\"token punctuation\">&gt;</span><span class=\"token punctuation\">&gt;</span></span> <span class=\"token constant\">GZ_MAP</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ConcurrentHashMap</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token annotation punctuation\">@PostConstruct</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setContext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">setContext</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">,</span> service<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        log<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"【开始加载规则缓存...】\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Hcgz</span><span class=\"token punctuation\">&gt;</span></span> hcgzs <span class=\"token operator\">=</span> hcgzService<span class=\"token punctuation\">.</span><span class=\"token function\">listGzpzs</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">Map</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">List</span><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Hcgz</span><span class=\"token punctuation\">&gt;</span><span class=\"token punctuation\">&gt;</span></span> byCorp <span class=\"token operator\">=</span> hcgzs<span class=\"token punctuation\">.</span><span class=\"token function\">stream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">collect</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Collectors</span><span class=\"token punctuation\">.</span><span class=\"token function\">groupingBy</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Hcgz</span><span class=\"token operator\">::</span><span class=\"token function\">getCrop</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        byCorp<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>jbfy<span class=\"token punctuation\">,</span> gzs<span class=\"token punctuation\">)</span> <span class=\"token operator\">-&gt;</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token class-name\">Map</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">List</span><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Hcgz</span><span class=\"token punctuation\">&gt;</span><span class=\"token punctuation\">&gt;</span></span> byGzbs <span class=\"token operator\">=</span> gzs<span class=\"token punctuation\">.</span><span class=\"token function\">stream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">collect</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Collectors</span><span class=\"token punctuation\">.</span><span class=\"token function\">groupingBy</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Hcgz</span><span class=\"token operator\">::</span><span class=\"token function\">getGzbs</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token constant\">GZ_MAP</span><span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span>jbfy<span class=\"token punctuation\">,</span> byGzbs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            log<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"法院id:{},加载规则条数：{}\"</span><span class=\"token punctuation\">,</span> jbfy<span class=\"token punctuation\">,</span> gzs<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        log<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"【加载规则缓存结束...】\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setContext</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">JajyContext</span> context<span class=\"token punctuation\">,</span> <span class=\"token class-name\">HcgzService</span> hcgzService<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">GzCaCheUtil</span><span class=\"token punctuation\">.</span>jajyContext <span class=\"token operator\">=</span> context<span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">GzCaCheUtil</span><span class=\"token punctuation\">.</span>hcgzService <span class=\"token operator\">=</span> hcgzService<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token doc-comment comment\">/**\n     * GzCaCheUtil\n     *\n     * <span class=\"token keyword\">@description</span> 刷新规则缓存\n     * <span class=\"token keyword\">@author</span> XieZhongCai\n     * <span class=\"token keyword\">@date</span> 2022/1/13 17:56\n     * <span class=\"token keyword\">@version</span> V2.0.1\n     */</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">synchronized</span> <span class=\"token keyword\">void</span> <span class=\"token function\">refresh</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token constant\">GZ_MAP</span><span class=\"token punctuation\">.</span><span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n\n    <span class=\"token doc-comment comment\">/**\n     * GzCaCheUtil\n     *\n     * <span class=\"token keyword\">@description</span> 根据规则标识获取结构化规则\n     * <span class=\"token keyword\">@param</span>  <span class=\"token parameter\">gzbs</span> 规则标识\n     * <span class=\"token keyword\">@return</span> 结构化规则\n     * <span class=\"token keyword\">@author</span> XieZhongCai\n     * <span class=\"token keyword\">@date</span> 2022/1/13 15:54\n     * <span class=\"token keyword\">@version</span> V2.0.1\n     */</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">Hcgz</span> <span class=\"token function\">getGz</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> gzbs<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">String</span> jbfy <span class=\"token operator\">=</span> <span class=\"token class-name\">ThreadLocalUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">JyhEnum</span><span class=\"token punctuation\">.</span><span class=\"token constant\">JBFY</span><span class=\"token punctuation\">.</span><span class=\"token function\">getCode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">Map</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">List</span><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Hcgz</span><span class=\"token punctuation\">&gt;</span><span class=\"token punctuation\">&gt;</span></span> listMap <span class=\"token operator\">=</span> <span class=\"token constant\">GZ_MAP</span><span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>jbfy<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// 如果自己法院没有初始化规则，使用指定院规则</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>listMap<span class=\"token punctuation\">.</span><span class=\"token function\">isEmpty</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            log<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"法院id：{}，没有初始化规则，使用指定院{}规则\"</span><span class=\"token punctuation\">,</span> jbfy <span class=\"token punctuation\">,</span> jajyContext<span class=\"token punctuation\">.</span><span class=\"token function\">getTjjzjkFybh</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            listMap <span class=\"token operator\">=</span> <span class=\"token constant\">GZ_MAP</span><span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>jajyContext<span class=\"token punctuation\">.</span><span class=\"token function\">getTjjzjkFybh</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span> listMap<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>gzbs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>","y":"a","t":"如何用ConcurrentHashMap做一个缓存类"},["/杂记/如果用ConcurrentHashMap做一个缓存类/","/%E6%9D%82%E8%AE%B0/%E5%A6%82%E6%9E%9C%E7%94%A8ConcurrentHashMap%E5%81%9A%E4%B8%80%E4%B8%AA%E7%BC%93%E5%AD%98%E7%B1%BB/index.html","/杂记/如果用ConcurrentHashMap做一个缓存类/README.md","/%E6%9D%82%E8%AE%B0/%E5%A6%82%E6%9E%9C%E7%94%A8ConcurrentHashMap%E5%81%9A%E4%B8%80%E4%B8%AA%E7%BC%93%E5%AD%98%E7%B1%BB/README.md"]],
  ["v-343517b3","/%E6%9D%82%E8%AE%B0/%E5%B0%8F%E6%8A%80%E5%B7%A7%EF%BC%9ASpringboot%E5%A4%9A%E6%95%B0%E6%8D%AE%E6%BA%90%E9%85%8D%E7%BD%AE/READEME.html",{"e":"<h3> Springboot多数据源配置</h3>\n<blockquote>\n<p>其中jyh和zx是二选一的，使用@ConditionalOnProperty注解动态加载。</p>\n<p>PS：一旦使用了多数据源切记包结构需要清晰，能区分出哪个包下面的逻辑与哪个库有关系。比如：某一个库直连方式改成了提供接口，能不能一下子区分出来要改哪些类</p>\n</blockquote>\n<p>数据库一：</p>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><pre class=\"language-java\"><code><span class=\"token keyword\">package</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>thunisoft<span class=\"token punctuation\">.</span>zbxc<span class=\"token punctuation\">.</span>config<span class=\"token punctuation\">.</span>datasource</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">com<span class=\"token punctuation\">.</span>alibaba<span class=\"token punctuation\">.</span>druid<span class=\"token punctuation\">.</span>spring<span class=\"token punctuation\">.</span>boot<span class=\"token punctuation\">.</span>autoconfigure<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">DruidDataSourceBuilder</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">lombok<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Data</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>ibatis<span class=\"token punctuation\">.</span>session<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">SqlSessionFactory</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>mybatis<span class=\"token punctuation\">.</span>spring<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">SqlSessionFactoryBean</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>mybatis<span class=\"token punctuation\">.</span>spring<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">MapperScan</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>beans<span class=\"token punctuation\">.</span>factory<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Qualifier</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>boot<span class=\"token punctuation\">.</span>autoconfigure<span class=\"token punctuation\">.</span>condition<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ConditionalOnProperty</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>boot<span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">.</span>properties<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ConfigurationProperties</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Bean</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Configuration</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span>support<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">PathMatchingResourcePatternResolver</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>jdbc<span class=\"token punctuation\">.</span>datasource<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">DataSourceTransactionManager</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">javax<span class=\"token punctuation\">.</span>sql<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">DataSource</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token doc-comment comment\">/**\n * jyhDataSourceConfig\n *\n * @Description 集约化数据源配置\n * <span class=\"token keyword\">@author</span> XieZhongCai\n * <span class=\"token keyword\">@date</span> 2021/8/17 16:06\n * <span class=\"token keyword\">@version</span> v1.0.0\n **/</span>\n<span class=\"token annotation punctuation\">@Data</span>\n<span class=\"token annotation punctuation\">@Configuration</span>\n<span class=\"token annotation punctuation\">@MapperScan</span><span class=\"token punctuation\">(</span>basePackages <span class=\"token operator\">=</span> <span class=\"token class-name\">JyhDataSourceConfig</span><span class=\"token punctuation\">.</span><span class=\"token constant\">PACKAGE</span><span class=\"token punctuation\">,</span> sqlSessionFactoryRef <span class=\"token operator\">=</span> <span class=\"token string\">\"jyhSqlSessionFactory\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token annotation punctuation\">@ConditionalOnProperty</span><span class=\"token punctuation\">(</span>value <span class=\"token operator\">=</span> <span class=\"token string\">\"zbxc.datasource.choose\"</span><span class=\"token punctuation\">,</span> havingValue <span class=\"token operator\">=</span> <span class=\"token string\">\"jyh\"</span><span class=\"token punctuation\">,</span> matchIfMissing <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">JyhDataSourceConfig</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token doc-comment comment\">/**\n     * dao层的包路径\n     */</span>\n    <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">String</span> <span class=\"token constant\">PACKAGE</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"com.thunisoft.zbxc.mappers.jyh\"</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token doc-comment comment\">/**\n     * mapper文件的相对路径\n     */</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">String</span> <span class=\"token constant\">MAPPER_LOCATION</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"classpath:mappers/jyh/*.xml\"</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token doc-comment comment\">/**\n     * <span class=\"token keyword\">@return</span> 集约化数据源\n     */</span>\n    <span class=\"token annotation punctuation\">@Bean</span><span class=\"token punctuation\">(</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"jyhDataSource\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token annotation punctuation\">@ConfigurationProperties</span><span class=\"token punctuation\">(</span>prefix <span class=\"token operator\">=</span> <span class=\"token string\">\"spring.datasource.druid.jyh\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">DataSource</span> <span class=\"token function\">jyhDataSource</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token class-name\">DruidDataSourceBuilder</span><span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token doc-comment comment\">/**\n     * 创建该数据源的事务管理\n     * <span class=\"token keyword\">@return</span> 事务管理\n     */</span>\n    <span class=\"token annotation punctuation\">@Bean</span><span class=\"token punctuation\">(</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"jyhTransactionManager\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">DataSourceTransactionManager</span> <span class=\"token function\">jyhTransactionManager</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DataSourceTransactionManager</span><span class=\"token punctuation\">(</span><span class=\"token function\">jyhDataSource</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token doc-comment comment\">/**\n     * 创建Mybatis的连接会话工厂实例\n     * <span class=\"token keyword\">@param</span> <span class=\"token parameter\">jyhDataSource</span> 数据源\n     * <span class=\"token keyword\">@return</span> 会话工厂实例\n     * <span class=\"token keyword\">@throws</span> <span class=\"token reference\"><span class=\"token class-name\">Exception</span></span> exception\n     */</span>\n    <span class=\"token annotation punctuation\">@Bean</span><span class=\"token punctuation\">(</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"jyhSqlSessionFactory\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">SqlSessionFactory</span> <span class=\"token function\">jyhSqlSessionFactory</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@Qualifier</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"jyhDataSource\"</span><span class=\"token punctuation\">)</span> <span class=\"token class-name\">DataSource</span> jyhDataSource<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">final</span> <span class=\"token class-name\">SqlSessionFactoryBean</span> sessionFactory <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SqlSessionFactoryBean</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// 设置数据源bean</span>\n        sessionFactory<span class=\"token punctuation\">.</span><span class=\"token function\">setDataSource</span><span class=\"token punctuation\">(</span>jyhDataSource<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        sessionFactory<span class=\"token punctuation\">.</span><span class=\"token function\">setMapperLocations</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">PathMatchingResourcePatternResolver</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                <span class=\"token comment\">// 设置mapper文件路径</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">getResources</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">JyhDataSourceConfig</span><span class=\"token punctuation\">.</span><span class=\"token constant\">MAPPER_LOCATION</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">return</span> sessionFactory<span class=\"token punctuation\">.</span><span class=\"token function\">getObject</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>","y":"a","t":""},["/杂记/小技巧：Springboot多数据源配置/READEME.html","/%E6%9D%82%E8%AE%B0/%E5%B0%8F%E6%8A%80%E5%B7%A7%EF%BC%9ASpringboot%E5%A4%9A%E6%95%B0%E6%8D%AE%E6%BA%90%E9%85%8D%E7%BD%AE/READEME","/杂记/小技巧：Springboot多数据源配置/READEME.md","/%E6%9D%82%E8%AE%B0/%E5%B0%8F%E6%8A%80%E5%B7%A7%EF%BC%9ASpringboot%E5%A4%9A%E6%95%B0%E6%8D%AE%E6%BA%90%E9%85%8D%E7%BD%AE/READEME.md"]],
  ["v-3d077ea3","/%E6%9D%82%E8%AE%B0/%E5%B0%8F%E6%8A%80%E5%B7%A7%EF%BC%9A%E5%88%A9%E7%94%A8Feuture%E7%BA%BF%E7%A8%8B%E6%B1%A0%E5%A4%9A%E4%B8%AA%E7%BA%BF%E7%A8%8B%E4%B8%80%E8%B5%B7%E6%89%A7%E8%A1%8C/%E5%B0%8F%E6%8A%80%E5%B7%A7%EF%BC%9A%E5%88%A9%E7%94%A8Feuture%E7%BA%BF%E7%A8%8B%E6%B1%A0%E5%A4%9A%E4%B8%AA%E7%BA%BF%E7%A8%8B%E4%B8%80%E8%B5%B7%E6%89%A7%E8%A1%8C.html",{"e":"<h1> 小技巧：利用Feuture线程池多个线程一起执行</h1>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><pre class=\"language-java\"><code><span class=\"token keyword\">private</span> <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">DbjdSyTjVo</span><span class=\"token punctuation\">&gt;</span></span> <span class=\"token function\">getZgTjjg</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">SyTjDTO</span> dto<span class=\"token punctuation\">,</span> <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">&gt;</span></span> corpIdList<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">ExecutionException</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">InterruptedException</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">DbjdSyTjVo</span><span class=\"token punctuation\">&gt;</span></span> tjjgList<span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// 拿到线程池，两个线程同时进行统计</span>\n        <span class=\"token class-name\">ExecutorService</span> executor <span class=\"token operator\">=</span> <span class=\"token class-name\">Executors</span><span class=\"token punctuation\">.</span><span class=\"token function\">newFixedThreadPool</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">Future</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">List</span><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">DbjdSyTjVo</span><span class=\"token punctuation\">&gt;</span><span class=\"token punctuation\">&gt;</span></span> futureA <span class=\"token operator\">=</span> executor<span class=\"token punctuation\">.</span><span class=\"token function\">submit</span><span class=\"token punctuation\">(</span>\n                <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-&gt;</span> zxjdxxMapper<span class=\"token punctuation\">.</span><span class=\"token function\">listSyZgjdTjA</span><span class=\"token punctuation\">(</span>dto<span class=\"token punctuation\">.</span><span class=\"token function\">getKssj</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> dto<span class=\"token punctuation\">.</span><span class=\"token function\">getJssj</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> corpIdList<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">Future</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">List</span><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">DbjdSyTjVo</span><span class=\"token punctuation\">&gt;</span><span class=\"token punctuation\">&gt;</span></span> futureF <span class=\"token operator\">=</span> executor<span class=\"token punctuation\">.</span><span class=\"token function\">submit</span><span class=\"token punctuation\">(</span>\n                <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-&gt;</span> zxjdxxMapper<span class=\"token punctuation\">.</span><span class=\"token function\">listSyZgjdTjF</span><span class=\"token punctuation\">(</span>dto<span class=\"token punctuation\">.</span><span class=\"token function\">getKssj</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> dto<span class=\"token punctuation\">.</span><span class=\"token function\">getJssj</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> corpIdList<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// 组装两次的结果</span>\n        tjjgList <span class=\"token operator\">=</span> futureA<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        tjjgList<span class=\"token punctuation\">.</span><span class=\"token function\">addAll</span><span class=\"token punctuation\">(</span>futureF<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> tjjgList<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>","y":"a","t":"小技巧：利用Feuture线程池多个线程一起执行"},["/杂记/小技巧：利用Feuture线程池多个线程一起执行/小技巧：利用Feuture线程池多个线程一起执行.html","/%E6%9D%82%E8%AE%B0/%E5%B0%8F%E6%8A%80%E5%B7%A7%EF%BC%9A%E5%88%A9%E7%94%A8Feuture%E7%BA%BF%E7%A8%8B%E6%B1%A0%E5%A4%9A%E4%B8%AA%E7%BA%BF%E7%A8%8B%E4%B8%80%E8%B5%B7%E6%89%A7%E8%A1%8C/%E5%B0%8F%E6%8A%80%E5%B7%A7%EF%BC%9A%E5%88%A9%E7%94%A8Feuture%E7%BA%BF%E7%A8%8B%E6%B1%A0%E5%A4%9A%E4%B8%AA%E7%BA%BF%E7%A8%8B%E4%B8%80%E8%B5%B7%E6%89%A7%E8%A1%8C","/杂记/小技巧：利用Feuture线程池多个线程一起执行/小技巧：利用Feuture线程池多个线程一起执行.md","/%E6%9D%82%E8%AE%B0/%E5%B0%8F%E6%8A%80%E5%B7%A7%EF%BC%9A%E5%88%A9%E7%94%A8Feuture%E7%BA%BF%E7%A8%8B%E6%B1%A0%E5%A4%9A%E4%B8%AA%E7%BA%BF%E7%A8%8B%E4%B8%80%E8%B5%B7%E6%89%A7%E8%A1%8C/%E5%B0%8F%E6%8A%80%E5%B7%A7%EF%BC%9A%E5%88%A9%E7%94%A8Feuture%E7%BA%BF%E7%A8%8B%E6%B1%A0%E5%A4%9A%E4%B8%AA%E7%BA%BF%E7%A8%8B%E4%B8%80%E8%B5%B7%E6%89%A7%E8%A1%8C.md"]],
  ["v-54a1d1f9","/%E6%9D%82%E8%AE%B0/%E5%B0%8F%E6%8A%80%E5%B7%A7%EF%BC%9A%E5%B0%86json%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E6%94%BE%E5%9C%A8%E5%90%8E%E7%AB%AF%E9%A1%B9%E7%9B%AE%E9%87%8C%E9%9D%A2%E4%BD%BF%E7%94%A8/%E5%B0%8F%E6%8A%80%E5%B7%A7%EF%BC%9A%E5%B0%86json%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E6%94%BE%E5%9C%A8%E5%90%8E%E7%AB%AF%E9%A1%B9%E7%9B%AE%E9%87%8C%E9%9D%A2%E4%BD%BF%E7%94%A8.html",{"e":"<p>小技巧：将json配置文件放在后端项目里面使用</p>\n<div class=\"language-text line-numbers-mode\" data-ext=\"text\"><pre class=\"language-text\"><code>&lt;!-- hutool工具包 start --&gt;\n    &lt;dependency&gt;\n    &lt;groupId&gt;cn.hutool&lt;/groupId&gt;\n    &lt;artifactId&gt;hutool-all&lt;/artifactId&gt;\n    &lt;version&gt;5.7.9&lt;/version&gt;\n    &lt;/dependency&gt;\n&lt;!-- hutool工具包 end --&gt;\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>","y":"a","t":""},["/杂记/小技巧：将json配置文件放在后端项目里面使用/小技巧：将json配置文件放在后端项目里面使用.html","/%E6%9D%82%E8%AE%B0/%E5%B0%8F%E6%8A%80%E5%B7%A7%EF%BC%9A%E5%B0%86json%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E6%94%BE%E5%9C%A8%E5%90%8E%E7%AB%AF%E9%A1%B9%E7%9B%AE%E9%87%8C%E9%9D%A2%E4%BD%BF%E7%94%A8/%E5%B0%8F%E6%8A%80%E5%B7%A7%EF%BC%9A%E5%B0%86json%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E6%94%BE%E5%9C%A8%E5%90%8E%E7%AB%AF%E9%A1%B9%E7%9B%AE%E9%87%8C%E9%9D%A2%E4%BD%BF%E7%94%A8","/杂记/小技巧：将json配置文件放在后端项目里面使用/小技巧：将json配置文件放在后端项目里面使用.md","/%E6%9D%82%E8%AE%B0/%E5%B0%8F%E6%8A%80%E5%B7%A7%EF%BC%9A%E5%B0%86json%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E6%94%BE%E5%9C%A8%E5%90%8E%E7%AB%AF%E9%A1%B9%E7%9B%AE%E9%87%8C%E9%9D%A2%E4%BD%BF%E7%94%A8/%E5%B0%8F%E6%8A%80%E5%B7%A7%EF%BC%9A%E5%B0%86json%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E6%94%BE%E5%9C%A8%E5%90%8E%E7%AB%AF%E9%A1%B9%E7%9B%AE%E9%87%8C%E9%9D%A2%E4%BD%BF%E7%94%A8.md"]],
  ["v-49661e44","/%E6%9D%82%E8%AE%B0/%E5%B0%8F%E6%8A%80%E5%B7%A7%EF%BC%9A%E7%94%B1%E6%88%90%E5%91%98%E5%8F%98%E9%87%8F%E5%8F%AF%E4%BB%A5%E8%AE%A1%E7%AE%97%E7%9A%84%E5%86%99%E5%9C%A8VO%E7%B1%BB%E4%B8%8A%E6%9B%B4%E4%BC%98%E9%9B%85/",{"e":"<h1> 一种计算更优雅的写法</h1>\n<p>代码优化前：</p>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><pre class=\"language-java\"><code>result<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span>gjjd <span class=\"token operator\">-&gt;</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">int</span> jc <span class=\"token operator\">=</span> jcMap<span class=\"token punctuation\">.</span><span class=\"token function\">getOrDefault</span><span class=\"token punctuation\">(</span>gjjd<span class=\"token punctuation\">.</span><span class=\"token function\">getJddm</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">int</span> xz <span class=\"token operator\">=</span> xzMap<span class=\"token punctuation\">.</span><span class=\"token function\">getOrDefault</span><span class=\"token punctuation\">(</span>gjjd<span class=\"token punctuation\">.</span><span class=\"token function\">getJddm</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">int</span> zj <span class=\"token operator\">=</span> jc <span class=\"token operator\">+</span> xz<span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">int</span> fk <span class=\"token operator\">=</span> gjjd<span class=\"token punctuation\">.</span><span class=\"token function\">getFk</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">int</span> wfk <span class=\"token operator\">=</span> gjjd<span class=\"token punctuation\">.</span><span class=\"token function\">getWfk</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">int</span> fkTotal <span class=\"token operator\">=</span> fk <span class=\"token operator\">+</span> wfk<span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">float</span> fkl <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span> fk <span class=\"token operator\">/</span> fkTotal<span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\">DecimalFormat</span> df <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DecimalFormat</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"0.00\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            df<span class=\"token punctuation\">.</span><span class=\"token function\">setRoundingMode</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">RoundingMode</span><span class=\"token punctuation\">.</span><span class=\"token constant\">HALF_UP</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token comment\">// 计算反馈率、总计、未反馈数；翻译节点代码</span>\n            gjjd<span class=\"token punctuation\">.</span><span class=\"token function\">setFkl</span><span class=\"token punctuation\">(</span>fk <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token operator\">||</span> fkTotal <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token operator\">?</span> <span class=\"token string\">\"0.00%\"</span> <span class=\"token operator\">:</span> df<span class=\"token punctuation\">.</span><span class=\"token function\">format</span><span class=\"token punctuation\">(</span>fkl <span class=\"token operator\">*</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"%\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            gjjd<span class=\"token punctuation\">.</span><span class=\"token function\">setXz</span><span class=\"token punctuation\">(</span>xz<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            gjjd<span class=\"token punctuation\">.</span><span class=\"token function\">setJc</span><span class=\"token punctuation\">(</span>jc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            gjjd<span class=\"token punctuation\">.</span><span class=\"token function\">setZj</span><span class=\"token punctuation\">(</span>zj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            gjjd<span class=\"token punctuation\">.</span><span class=\"token function\">setWfk</span><span class=\"token punctuation\">(</span>wfk<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            gjjd<span class=\"token punctuation\">.</span><span class=\"token function\">setJdmc</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">JddmEnum</span><span class=\"token punctuation\">.</span><span class=\"token function\">translateByCode</span><span class=\"token punctuation\">(</span>gjjd<span class=\"token punctuation\">.</span><span class=\"token function\">getJddm</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>","y":"a","t":"一种计算更优雅的写法"},["/杂记/小技巧：由成员变量可以计算的写在VO类上更优雅/","/%E6%9D%82%E8%AE%B0/%E5%B0%8F%E6%8A%80%E5%B7%A7%EF%BC%9A%E7%94%B1%E6%88%90%E5%91%98%E5%8F%98%E9%87%8F%E5%8F%AF%E4%BB%A5%E8%AE%A1%E7%AE%97%E7%9A%84%E5%86%99%E5%9C%A8VO%E7%B1%BB%E4%B8%8A%E6%9B%B4%E4%BC%98%E9%9B%85/index.html","/杂记/小技巧：由成员变量可以计算的写在VO类上更优雅/README.md","/%E6%9D%82%E8%AE%B0/%E5%B0%8F%E6%8A%80%E5%B7%A7%EF%BC%9A%E7%94%B1%E6%88%90%E5%91%98%E5%8F%98%E9%87%8F%E5%8F%AF%E4%BB%A5%E8%AE%A1%E7%AE%97%E7%9A%84%E5%86%99%E5%9C%A8VO%E7%B1%BB%E4%B8%8A%E6%9B%B4%E4%BC%98%E9%9B%85/README.md"]],
  ["v-aee7f904","/%E6%9D%82%E8%AE%B0/%E6%B6%88%E9%99%A4if...else%E7%9A%84%E9%94%A6%E5%9B%8A%E5%A6%99%E8%AE%A1%EF%BC%8C%E5%8F%8D%E5%B0%84%E6%97%B6%E6%B7%BB%E5%8A%A0%E7%BC%93%E5%AD%98/",{"e":"<h1> 消除if...else的锦囊妙计，反射时添加缓存</h1>\n<p>我们都知道通过<code>反射</code>创建对象实例，比使用<code>new</code>关键字要慢很多。</p>\n<p>由此，不太建议在用户请求过来时，每次都通过反射<code>实时</code>创建实例。</p>\n<p>有时候，为了代码的灵活性，又不得不用反射创建实例，这时该怎么办呢？</p>\n<p>答：加<code>缓存</code>。</p>\n<p>先看以下代码</p>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><pre class=\"language-java\"><code>publicinterface <span class=\"token class-name\">IPay</span> <span class=\"token punctuation\">{</span>  \n    <span class=\"token keyword\">void</span> <span class=\"token function\">pay</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n<span class=\"token punctuation\">}</span>  \n \n<span class=\"token annotation punctuation\">@Service</span>\npublicclass <span class=\"token class-name\">AliaPay</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">IPay</span> <span class=\"token punctuation\">{</span>  \n     <span class=\"token annotation punctuation\">@Override</span>\n     <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">pay</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>  \n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"===发起支付宝支付===\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n     <span class=\"token punctuation\">}</span>  \n<span class=\"token punctuation\">}</span>  \n \n<span class=\"token annotation punctuation\">@Service</span>\npublicclass <span class=\"token class-name\">WeixinPay</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">IPay</span> <span class=\"token punctuation\">{</span>  \n     <span class=\"token annotation punctuation\">@Override</span>\n     <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">pay</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>  \n         <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"===发起微信支付===\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n     <span class=\"token punctuation\">}</span>  \n<span class=\"token punctuation\">}</span>  \n  \n<span class=\"token annotation punctuation\">@Service</span>\npublicclass <span class=\"token class-name\">JingDongPay</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">IPay</span> <span class=\"token punctuation\">{</span>  \n     <span class=\"token annotation punctuation\">@Override</span>\n     <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">pay</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>  \n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"===发起京东支付===\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n     <span class=\"token punctuation\">}</span>  \n<span class=\"token punctuation\">}</span>  \n \n<span class=\"token annotation punctuation\">@Service</span>\npublicclass <span class=\"token class-name\">PayService</span> <span class=\"token punctuation\">{</span>  \n     <span class=\"token annotation punctuation\">@Autowired</span>\n     <span class=\"token keyword\">private</span> <span class=\"token class-name\">AliaPay</span> aliaPay<span class=\"token punctuation\">;</span>  \n     <span class=\"token annotation punctuation\">@Autowired</span>\n     <span class=\"token keyword\">private</span> <span class=\"token class-name\">WeixinPay</span> weixinPay<span class=\"token punctuation\">;</span>  \n     <span class=\"token annotation punctuation\">@Autowired</span>\n     <span class=\"token keyword\">private</span> <span class=\"token class-name\">JingDongPay</span> jingDongPay<span class=\"token punctuation\">;</span>  \n    \n   \n     <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">toPay</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> code<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>  \n         <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"alia\"</span><span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span>code<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>  \n             aliaPay<span class=\"token punctuation\">.</span><span class=\"token function\">pay</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n         <span class=\"token punctuation\">}</span> elseif <span class=\"token punctuation\">(</span><span class=\"token string\">\"weixin\"</span><span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span>code<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>  \n              weixinPay<span class=\"token punctuation\">.</span><span class=\"token function\">pay</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n         <span class=\"token punctuation\">}</span> elseif <span class=\"token punctuation\">(</span><span class=\"token string\">\"jingdong\"</span><span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span>code<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>  \n              jingDongPay<span class=\"token punctuation\">.</span><span class=\"token function\">pay</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n         <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>  \n              <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"找不到支付方式\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n         <span class=\"token punctuation\">}</span>  \n     <span class=\"token punctuation\">}</span>  \n<span class=\"token punctuation\">}</span>\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>","y":"a","t":"消除if...else的锦囊妙计，反射时添加缓存"},["/杂记/消除if...else的锦囊妙计，反射时添加缓存/","/%E6%9D%82%E8%AE%B0/%E6%B6%88%E9%99%A4if...else%E7%9A%84%E9%94%A6%E5%9B%8A%E5%A6%99%E8%AE%A1%EF%BC%8C%E5%8F%8D%E5%B0%84%E6%97%B6%E6%B7%BB%E5%8A%A0%E7%BC%93%E5%AD%98/index.html","/杂记/消除if...else的锦囊妙计，反射时添加缓存/README.md","/%E6%9D%82%E8%AE%B0/%E6%B6%88%E9%99%A4if...else%E7%9A%84%E9%94%A6%E5%9B%8A%E5%A6%99%E8%AE%A1%EF%BC%8C%E5%8F%8D%E5%B0%84%E6%97%B6%E6%B7%BB%E5%8A%A0%E7%BC%93%E5%AD%98/README.md"]],
  ["v-40783b3f","/%E6%9D%82%E8%AE%B0/%E7%AD%96%E7%95%A5%E5%B7%A5%E5%8E%82%E6%A8%A1%E5%BC%8F%E5%AE%9E%E6%88%98/",{"e":"<h1> 策略+工厂模式实战</h1>\n<p>背景：电子卷宗平台之前是走的消息平台来调用，现在会陆陆续续改成http调用的方式，先从删除接口开始，为了以后的拓展用到了策略工厂模式</p>\n<h4> 策略接口</h4>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><pre class=\"language-java\"><code><span class=\"token keyword\">package</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>thunisoft<span class=\"token punctuation\">.</span>wszx<span class=\"token punctuation\">.</span>dzjz<span class=\"token punctuation\">.</span>strategy</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">com<span class=\"token punctuation\">.</span>thunisoft<span class=\"token punctuation\">.</span>wszx<span class=\"token punctuation\">.</span>dzjz<span class=\"token punctuation\">.</span>dto<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">DzjzHandleWsDTO</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>http<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ResponseEntity</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token doc-comment comment\">/**\n * IDzjzHandleWsStrategy\n *\n * @Description 电子卷宗操作文书\n * <span class=\"token keyword\">@author</span> XieZhongCai\n * <span class=\"token keyword\">@date</span> 2022/9/22 17:01\n * <span class=\"token keyword\">@version</span> v1.7.6-湖南紧急需求\n **/</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">IDzjzHandleWsStrategy</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token doc-comment comment\">/**\n     * IDzjzHandleWsStrategy\n     *\n     * <span class=\"token keyword\">@description</span> 根据卷宗传过来的参数操作对应的事件\n     * <span class=\"token keyword\">@param</span> <span class=\"token parameter\">dto</span> 参数类\n     * <span class=\"token keyword\">@return</span> ResponseEntity<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Void</span><span class=\"token punctuation\">&gt;</span></span>\n     * <span class=\"token keyword\">@author</span> XieZhongCai\n     * <span class=\"token keyword\">@date</span> 2022/9/22 17:02\n     * <span class=\"token keyword\">@version</span> v1.7.6-湖南紧急需求\n     */</span>\n    <span class=\"token class-name\">ResponseEntity</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Void</span><span class=\"token punctuation\">&gt;</span></span> <span class=\"token function\">execute</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">DzjzHandleWsDTO</span> dto<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>","y":"a","t":"策略+工厂模式实战"},["/杂记/策略工厂模式实战/","/%E6%9D%82%E8%AE%B0/%E7%AD%96%E7%95%A5%E5%B7%A5%E5%8E%82%E6%A8%A1%E5%BC%8F%E5%AE%9E%E6%88%98/index.html","/杂记/策略工厂模式实战/README.md","/%E6%9D%82%E8%AE%B0/%E7%AD%96%E7%95%A5%E5%B7%A5%E5%8E%82%E6%A8%A1%E5%BC%8F%E5%AE%9E%E6%88%98/README.md"]],
  ["v-2617698b","/%E6%9D%82%E8%AE%B0/%E7%AD%96%E7%95%A5%E6%A8%A1%E7%89%88%E5%B7%A5%E5%8E%82%E6%A8%A1%E5%BC%8F%E7%BB%93%E5%90%88%E5%AE%9E%E6%88%98/",{"e":"<p>在项目中灵活使用策略模式+工厂模式+模版模式实战</p>\n","y":"a","t":""},["/杂记/策略模版工厂模式结合实战/","/%E6%9D%82%E8%AE%B0/%E7%AD%96%E7%95%A5%E6%A8%A1%E7%89%88%E5%B7%A5%E5%8E%82%E6%A8%A1%E5%BC%8F%E7%BB%93%E5%90%88%E5%AE%9E%E6%88%98/index.html","/杂记/策略模版工厂模式结合实战/README.md","/%E6%9D%82%E8%AE%B0/%E7%AD%96%E7%95%A5%E6%A8%A1%E7%89%88%E5%B7%A5%E5%8E%82%E6%A8%A1%E5%BC%8F%E7%BB%93%E5%90%88%E5%AE%9E%E6%88%98/README.md"]],
  ["v-9e14ff60","/%E6%9D%82%E8%AE%B0/%E7%BA%BF%E7%A8%8B%E6%B1%A0%EF%BC%9A%E4%B8%9A%E5%8A%A1%E4%BB%A3%E7%A0%81%E6%9C%80%E5%B8%B8%E7%94%A8%E4%B9%9F%E6%9C%80%E5%AE%B9%E6%98%93%E7%8A%AF%E9%94%99%E7%9A%84%E7%BB%84%E4%BB%B6/",{"e":"<p>程序中，我们会用各种池化技术来缓存创建昂贵的对象，比如线程池、连接池、内存池。一般是预先创建一些对象放入池中，使用的时候直接取出使用，用完归还以便复用，还会通过一定的策略调整池中缓存对象的数量，实现池的动态伸缩。</p>\n<p>由于线程的创建比较昂贵，随意、没有控制地创建大量线程会造成性能问题，因此短平快的任务一般考虑使用线程池来处理，而不是直接创建线程。</p>\n<p>今天，我们就针对线程池这个话题展开讨论，通过三个生产事故，来看看使用线程池应该注意些什么。</p>\n<h2> 线程池的声明需要手动进行</h2>\n<p><strong>Java</strong> 中的 <strong>Executors</strong> 类定义了一些快捷的工具方法，来帮助我们快速创建线程池。《阿里巴巴Java开发手册》中提到，禁止使用这些方法来创建线程池，而应该手动 <strong>new ThreadPoolExecutor</strong> 来创建线程池。这一条规则的背后，是大量血淋淋的生产事故，最典型的就是 <strong>newFixedThreadPool</strong> 和<strong>newCachedThreadPool</strong> ，可能因为资源耗尽导致 <strong>OOM</strong> 问题。</p>","y":"a","t":""},["/杂记/线程池：业务代码最常用也最容易犯错的组件/","/%E6%9D%82%E8%AE%B0/%E7%BA%BF%E7%A8%8B%E6%B1%A0%EF%BC%9A%E4%B8%9A%E5%8A%A1%E4%BB%A3%E7%A0%81%E6%9C%80%E5%B8%B8%E7%94%A8%E4%B9%9F%E6%9C%80%E5%AE%B9%E6%98%93%E7%8A%AF%E9%94%99%E7%9A%84%E7%BB%84%E4%BB%B6/index.html","/杂记/线程池：业务代码最常用也最容易犯错的组件/README.md","/%E6%9D%82%E8%AE%B0/%E7%BA%BF%E7%A8%8B%E6%B1%A0%EF%BC%9A%E4%B8%9A%E5%8A%A1%E4%BB%A3%E7%A0%81%E6%9C%80%E5%B8%B8%E7%94%A8%E4%B9%9F%E6%9C%80%E5%AE%B9%E6%98%93%E7%8A%AF%E9%94%99%E7%9A%84%E7%BB%84%E4%BB%B6/README.md"]],
  ["v-15dc86c8","/%E6%9D%82%E8%AE%B0/%E8%B0%83%E7%94%A8WebService%E5%B7%A5%E5%85%B7%E7%B1%BB/",{"e":"<h3> 调用WebService工具类</h3>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><pre class=\"language-java\"><code><span class=\"token keyword\">package</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>thunisoft<span class=\"token punctuation\">.</span>zbxc<span class=\"token punctuation\">.</span>util</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">lombok<span class=\"token punctuation\">.</span>experimental<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">UtilityClass</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">lombok<span class=\"token punctuation\">.</span>extern<span class=\"token punctuation\">.</span>slf4j<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Slf4j</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>commons<span class=\"token punctuation\">.</span>lang3<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">StringUtils</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>cxf<span class=\"token punctuation\">.</span>endpoint<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Client</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>cxf<span class=\"token punctuation\">.</span>jaxws<span class=\"token punctuation\">.</span>endpoint<span class=\"token punctuation\">.</span>dynamic<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">JaxWsDynamicClientFactory</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>cxf<span class=\"token punctuation\">.</span>transport<span class=\"token punctuation\">.</span>http<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">HTTPConduit</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>cxf<span class=\"token punctuation\">.</span>transports<span class=\"token punctuation\">.</span>http<span class=\"token punctuation\">.</span>configuration<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">HTTPClientPolicy</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token doc-comment comment\">/**\n *\n * StaticInvokeJaxWs\n * <span class=\"token keyword\">@description</span> 连接\n * <span class=\"token keyword\">@author</span> lixiangyang\n * <span class=\"token keyword\">@date</span> 2020/7/30 15:13\n * <span class=\"token keyword\">@version</span> 1.0.0\n */</span>\n\n<span class=\"token annotation punctuation\">@Slf4j</span>\n<span class=\"token annotation punctuation\">@UtilityClass</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">StaticInvokeJaxWs</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token doc-comment comment\">/**\n     * 连接超时时间\n     */</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span>  <span class=\"token class-name\">Long</span> <span class=\"token constant\">WSCONNECTIONTIMEOUT</span> <span class=\"token operator\">=</span> <span class=\"token number\">3</span> <span class=\"token operator\">*</span> <span class=\"token number\">60</span> <span class=\"token operator\">*</span> <span class=\"token number\">100L</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token doc-comment comment\">/**\n     * 响应超时时间\n     */</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span>  <span class=\"token class-name\">Long</span> <span class=\"token constant\">RECEIVETIMEOUT</span> <span class=\"token operator\">=</span> <span class=\"token number\">5</span> <span class=\"token operator\">*</span> <span class=\"token number\">60</span> <span class=\"token operator\">*</span> <span class=\"token number\">100L</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token doc-comment comment\">/**\n     *\n     * StaticInvokeJaxWs\n     * <span class=\"token keyword\">@description</span> webservice 方法调用\n     * <span class=\"token keyword\">@param</span> <span class=\"token parameter\">wsdl</span>  wsdl地址\n     * <span class=\"token keyword\">@param</span> <span class=\"token parameter\">clazz</span> 类对象名\n     * <span class=\"token keyword\">@param</span> <span class=\"token parameter\">methodName</span>    方法名称\n     * <span class=\"token keyword\">@param</span> <span class=\"token parameter\">params</span>    参数\n     * <span class=\"token keyword\">@return</span>  返回值\n     * <span class=\"token keyword\">@author</span> huangyi-1\n     * <span class=\"token keyword\">@date</span> 2020年6月3日 下午2:17:21\n     * <span class=\"token keyword\">@version</span> v1.0\n     */</span>\n    <span class=\"token annotation punctuation\">@SuppressWarnings</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"unchecked\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">String</span> <span class=\"token function\">invokeJaxWsNew</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> wsdl<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> methodName<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> params<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">long</span> start <span class=\"token operator\">=</span> <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span><span class=\"token function\">currentTimeMillis</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        log<span class=\"token punctuation\">.</span><span class=\"token function\">debug</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"webservice被调用,URL:{},method:{},参数:{}\"</span> <span class=\"token punctuation\">,</span>wsdl<span class=\"token punctuation\">,</span>methodName<span class=\"token punctuation\">,</span>params<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">ClassLoader</span> cl <span class=\"token operator\">=</span> <span class=\"token class-name\">Thread</span><span class=\"token punctuation\">.</span><span class=\"token function\">currentThread</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getContextClassLoader</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">JaxWsDynamicClientFactory</span> dcf <span class=\"token operator\">=</span> <span class=\"token class-name\">JaxWsDynamicClientFactory</span><span class=\"token punctuation\">.</span><span class=\"token function\">newInstance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Client</span> client <span class=\"token operator\">=</span> dcf<span class=\"token punctuation\">.</span><span class=\"token function\">createClient</span><span class=\"token punctuation\">(</span>wsdl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token class-name\">HTTPConduit</span> http <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">HTTPConduit</span><span class=\"token punctuation\">)</span> client<span class=\"token punctuation\">.</span><span class=\"token function\">getConduit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\">HTTPClientPolicy</span> httpClientPolicy <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HTTPClientPolicy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            httpClientPolicy<span class=\"token punctuation\">.</span><span class=\"token function\">setConnectionTimeout</span><span class=\"token punctuation\">(</span><span class=\"token constant\">WSCONNECTIONTIMEOUT</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//连接超时</span>\n\n            httpClientPolicy<span class=\"token punctuation\">.</span><span class=\"token function\">setAllowChunking</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//取消块编码</span>\n            httpClientPolicy<span class=\"token punctuation\">.</span><span class=\"token function\">setReceiveTimeout</span><span class=\"token punctuation\">(</span><span class=\"token constant\">RECEIVETIMEOUT</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//响应超时</span>\n            http<span class=\"token punctuation\">.</span><span class=\"token function\">setClient</span><span class=\"token punctuation\">(</span>httpClientPolicy<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token class-name\">Object</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> objects <span class=\"token operator\">=</span> client<span class=\"token punctuation\">.</span><span class=\"token function\">invoke</span><span class=\"token punctuation\">(</span>methodName<span class=\"token punctuation\">,</span> params<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\">String</span> result <span class=\"token operator\">=</span> objects<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">?</span> <span class=\"token class-name\">StringUtils</span><span class=\"token punctuation\">.</span><span class=\"token constant\">EMPTY</span> <span class=\"token operator\">:</span> objects<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            log<span class=\"token punctuation\">.</span><span class=\"token function\">debug</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"webservice返回结果:{}\"</span><span class=\"token punctuation\">,</span> result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">return</span> result<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">RuntimeException</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"调用webService获取结果出错\"</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">finally</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token class-name\">Thread</span><span class=\"token punctuation\">.</span><span class=\"token function\">currentThread</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">setContextClassLoader</span><span class=\"token punctuation\">(</span>cl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            log<span class=\"token punctuation\">.</span><span class=\"token function\">debug</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"【计时】webservice结束 \"</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span><span class=\"token function\">currentTimeMillis</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> start<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span>\n\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>","y":"a","t":""},["/杂记/调用WebService工具类/","/%E6%9D%82%E8%AE%B0/%E8%B0%83%E7%94%A8WebService%E5%B7%A5%E5%85%B7%E7%B1%BB/index.html","/杂记/调用WebService工具类/README.md","/%E6%9D%82%E8%AE%B0/%E8%B0%83%E7%94%A8WebService%E5%B7%A5%E5%85%B7%E7%B1%BB/README.md"]],
  ["v-4570c261","/%E6%9D%82%E8%AE%B0/%E9%80%9A%E8%BF%87%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E5%88%9B%E5%BB%BA%E7%BA%BF%E7%A8%8B%E6%B1%A0/",{"e":"<h3> 使用配置文件去创建线程池方便定时任务的调用</h3>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><pre class=\"language-java\"><code><span class=\"token doc-comment comment\">/**\n * <span class=\"token keyword\">@projectName</span> zbxc\n * <span class=\"token keyword\">@package</span> com.thunisoft.zbxc.config\n * <span class=\"token keyword\">@className</span> com.thunisoft.zbxc.config.ScheduleConfig\n * <span class=\"token keyword\">@copyright</span> Copyright 2020 Thunisoft, Inc All rights reserved.\n */</span>\n<span class=\"token keyword\">package</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>thunisoft<span class=\"token punctuation\">.</span>zbxc<span class=\"token punctuation\">.</span>config</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Bean</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Configuration</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>scheduling<span class=\"token punctuation\">.</span>concurrent<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ThreadPoolTaskExecutor</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span>concurrent<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Executor</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span>concurrent<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ThreadPoolExecutor</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token doc-comment comment\">/**\n * ScheduleConfig\n * <span class=\"token keyword\">@description</span> 定时任务配置类\n * <span class=\"token keyword\">@author</span> xzc\n * <span class=\"token keyword\">@date</span> 2021-8-23 17:15\n * <span class=\"token keyword\">@version</span> 1.0\n */</span>\n<span class=\"token annotation punctuation\">@Configuration</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ScheduleConfig</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token doc-comment comment\">/** size */</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">Integer</span> <span class=\"token constant\">SIZE</span> <span class=\"token operator\">=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token doc-comment comment\">/** qsize */</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">Integer</span> <span class=\"token constant\">QSIZE</span> <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token doc-comment comment\">/** sec */</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">Integer</span> <span class=\"token constant\">SEC</span> <span class=\"token operator\">=</span> <span class=\"token number\">60</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token doc-comment comment\">/**\n     *\n     * ScheduleConfig\n     *\n     * <span class=\"token keyword\">@description</span> 定时任务线程池.\n     * <span class=\"token keyword\">@return</span> java.util.concurrent.Executor\n     * <span class=\"token keyword\">@date</span> 2021-8-25 10:52\n     * <span class=\"token keyword\">@author</span> xzc\n     * <span class=\"token keyword\">@version</span> 1.0\n     */</span>\n    <span class=\"token annotation punctuation\">@Bean</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Executor</span> <span class=\"token function\">myAsync</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">ThreadPoolTaskExecutor</span> executor <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ThreadPoolTaskExecutor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//最大线程数</span>\n        executor<span class=\"token punctuation\">.</span><span class=\"token function\">setMaxPoolSize</span><span class=\"token punctuation\">(</span><span class=\"token constant\">SIZE</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//核心线程数</span>\n        executor<span class=\"token punctuation\">.</span><span class=\"token function\">setCorePoolSize</span><span class=\"token punctuation\">(</span><span class=\"token constant\">SIZE</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//任务队列的大小</span>\n        executor<span class=\"token punctuation\">.</span><span class=\"token function\">setQueueCapacity</span><span class=\"token punctuation\">(</span><span class=\"token constant\">QSIZE</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//线程前缀名</span>\n        executor<span class=\"token punctuation\">.</span><span class=\"token function\">setThreadNamePrefix</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"zbxc-thread-\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//线程存活时间</span>\n        executor<span class=\"token punctuation\">.</span><span class=\"token function\">setKeepAliveSeconds</span><span class=\"token punctuation\">(</span><span class=\"token constant\">SEC</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token doc-comment comment\">/**\n         * 拒绝处理策略\n         * CallerRunsPolicy()：交由调用方线程运行，比如 main 线程。\n         * AbortPolicy()：直接抛出异常。\n         * DiscardPolicy()：直接丢弃。\n         * DiscardOldestPolicy()：丢弃队列中最老的任务。\n         */</span>\n        executor<span class=\"token punctuation\">.</span><span class=\"token function\">setRejectedExecutionHandler</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">ThreadPoolExecutor<span class=\"token punctuation\">.</span>DiscardOldestPolicy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//线程初始化</span>\n        executor<span class=\"token punctuation\">.</span><span class=\"token function\">initialize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> executor<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span>\n\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>","y":"a","t":""},["/杂记/通过配置文件创建线程池/","/%E6%9D%82%E8%AE%B0/%E9%80%9A%E8%BF%87%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E5%88%9B%E5%BB%BA%E7%BA%BF%E7%A8%8B%E6%B1%A0/index.html","/杂记/通过配置文件创建线程池/README.md","/%E6%9D%82%E8%AE%B0/%E9%80%9A%E8%BF%87%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E5%88%9B%E5%BB%BA%E7%BA%BF%E7%A8%8B%E6%B1%A0/README.md"]],
  ["v-3706649a","/404.html",{"y":"p","t":""},["/404"]],
  ["v-e1e3da16","/posts/",{"y":"p","t":"Posts"},["/posts/index.html"]],
  ["v-08f42f4a","/posts/apple/",{"y":"p","t":"Apple"},["/posts/apple/index.html"]],
  ["v-30be3cd5","/posts/banana/",{"y":"p","t":"Banana"},["/posts/banana/index.html"]],
  ["v-56541ad6","/%E6%9D%82%E8%AE%B0/PostgreSql%E3%80%81SqlServer%E5%B0%8F%E6%8A%80%E5%B7%A7%EF%BC%9ATop5%E6%8E%92%E5%90%8D/",{"y":"p","t":"Postgre Sql、 Sql Server小技巧： Top5排名"},["/杂记/PostgreSql、SqlServer小技巧：Top5排名/","/%E6%9D%82%E8%AE%B0/PostgreSql%E3%80%81SqlServer%E5%B0%8F%E6%8A%80%E5%B7%A7%EF%BC%9ATop5%E6%8E%92%E5%90%8D/index.html"]],
  ["v-22f85eda","/%E6%9D%82%E8%AE%B0/%E5%87%BD%E6%95%B0%E6%8E%A5%E5%8F%A3%E7%BC%96%E7%A8%8B/",{"y":"p","t":"函数接口编程"},["/杂记/函数接口编程/","/%E6%9D%82%E8%AE%B0/%E5%87%BD%E6%95%B0%E6%8E%A5%E5%8F%A3%E7%BC%96%E7%A8%8B/index.html"]],
  ["v-46fc0741","/%E6%9D%82%E8%AE%B0/%E5%B0%8F%E6%8A%80%E5%B7%A7%EF%BC%9ASpringboot%E5%A4%9A%E6%95%B0%E6%8D%AE%E6%BA%90%E9%85%8D%E7%BD%AE/",{"y":"p","t":"小技巧： Springboot多数据源配置"},["/杂记/小技巧：Springboot多数据源配置/","/%E6%9D%82%E8%AE%B0/%E5%B0%8F%E6%8A%80%E5%B7%A7%EF%BC%9ASpringboot%E5%A4%9A%E6%95%B0%E6%8D%AE%E6%BA%90%E9%85%8D%E7%BD%AE/index.html"]],
  ["v-2b5a02fd","/%E6%9D%82%E8%AE%B0/%E5%B0%8F%E6%8A%80%E5%B7%A7%EF%BC%9A%E5%88%A9%E7%94%A8Feuture%E7%BA%BF%E7%A8%8B%E6%B1%A0%E5%A4%9A%E4%B8%AA%E7%BA%BF%E7%A8%8B%E4%B8%80%E8%B5%B7%E6%89%A7%E8%A1%8C/",{"y":"p","t":"小技巧：利用 Feuture线程池多个线程一起执行"},["/杂记/小技巧：利用Feuture线程池多个线程一起执行/","/%E6%9D%82%E8%AE%B0/%E5%B0%8F%E6%8A%80%E5%B7%A7%EF%BC%9A%E5%88%A9%E7%94%A8Feuture%E7%BA%BF%E7%A8%8B%E6%B1%A0%E5%A4%9A%E4%B8%AA%E7%BA%BF%E7%A8%8B%E4%B8%80%E8%B5%B7%E6%89%A7%E8%A1%8C/index.html"]],
  ["v-5094e2e4","/%E6%9D%82%E8%AE%B0/%E5%B0%8F%E6%8A%80%E5%B7%A7%EF%BC%9A%E5%B0%86json%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E6%94%BE%E5%9C%A8%E5%90%8E%E7%AB%AF%E9%A1%B9%E7%9B%AE%E9%87%8C%E9%9D%A2%E4%BD%BF%E7%94%A8/",{"y":"p","t":"小技巧：将json配置文件放在后端项目里面使用"},["/杂记/小技巧：将json配置文件放在后端项目里面使用/","/%E6%9D%82%E8%AE%B0/%E5%B0%8F%E6%8A%80%E5%B7%A7%EF%BC%9A%E5%B0%86json%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E6%94%BE%E5%9C%A8%E5%90%8E%E7%AB%AF%E9%A1%B9%E7%9B%AE%E9%87%8C%E9%9D%A2%E4%BD%BF%E7%94%A8/index.html"]],
  ["v-5bc93818","/category/",{"y":"p","t":"分类","I":0},["/category/index.html"]],
  ["v-744d024e","/tag/",{"y":"p","t":"标签","I":0},["/tag/index.html"]],
  ["v-e52c881c","/article/",{"y":"p","t":"文章","I":0},["/article/index.html"]],
  ["v-154dc4c4","/star/",{"y":"p","t":"收藏","I":0},["/star/index.html"]],
  ["v-01560935","/timeline/",{"y":"p","t":"时间轴","I":0},["/timeline/index.html"]],
  ["v-03d57386","/category/%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/",{"y":"p","t":"使用指南 分类","I":0},["/category/使用指南/","/category/%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/index.html"]],
  ["v-83e1f92e","/tag/%E7%A6%81%E7%94%A8/",{"y":"p","t":"禁用 标签","I":0},["/tag/禁用/","/tag/%E7%A6%81%E7%94%A8/index.html"]],
  ["v-0c75a0f8","/category/%E6%A8%B1%E6%A1%83/",{"y":"p","t":"樱桃 分类","I":0},["/category/樱桃/","/category/%E6%A8%B1%E6%A1%83/index.html"]],
  ["v-1e447d61","/tag/%E6%96%87%E7%AB%A0%E5%8A%A0%E5%AF%86/",{"y":"p","t":"文章加密 标签","I":0},["/tag/文章加密/","/tag/%E6%96%87%E7%AB%A0%E5%8A%A0%E5%AF%86/index.html"]],
  ["v-226a68ec","/category/%E7%81%AB%E9%BE%99%E6%9E%9C/",{"y":"p","t":"火龙果 分类","I":0},["/category/火龙果/","/category/%E7%81%AB%E9%BE%99%E6%9E%9C/index.html"]],
  ["v-484552dc","/tag/markdown/",{"y":"p","t":"Markdown 标签","I":0},["/tag/markdown/index.html"]],
  ["v-12590846","/category/%E6%B0%B4%E6%9E%9C/",{"y":"p","t":"水果 分类","I":0},["/category/水果/","/category/%E6%B0%B4%E6%9E%9C/index.html"]],
  ["v-a378ad66","/tag/%E9%A1%B5%E9%9D%A2%E9%85%8D%E7%BD%AE/",{"y":"p","t":"页面配置 标签","I":0},["/tag/页面配置/","/tag/%E9%A1%B5%E9%9D%A2%E9%85%8D%E7%BD%AE/index.html"]],
  ["v-247d58ff","/category/%E8%8D%89%E8%8E%93/",{"y":"p","t":"草莓 分类","I":0},["/category/草莓/","/category/%E8%8D%89%E8%8E%93/index.html"]],
  ["v-7b167472","/tag/%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/",{"y":"p","t":"使用指南 标签","I":0},["/tag/使用指南/","/tag/%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/index.html"]],
  ["v-76b80ea2","/category/%E8%94%AC%E8%8F%9C/",{"y":"p","t":"蔬菜 分类","I":0},["/category/蔬菜/","/category/%E8%94%AC%E8%8F%9C/index.html"]],
  ["v-0f1d0e94","/tag/%E7%BA%A2/",{"y":"p","t":"红 标签","I":0},["/tag/红/","/tag/%E7%BA%A2/index.html"]],
  ["v-40b68770","/category/%E8%8B%B9%E6%9E%9C/",{"y":"p","t":"苹果 分类","I":0},["/category/苹果/","/category/%E8%8B%B9%E6%9E%9C/index.html"]],
  ["v-3e6b05e8","/tag/%E5%B0%8F/",{"y":"p","t":"小 标签","I":0},["/tag/小/","/tag/%E5%B0%8F/index.html"]],
  ["v-4c41ef7e","/category/%E9%A6%99%E8%95%89/",{"y":"p","t":"香蕉 分类","I":0},["/category/香蕉/","/category/%E9%A6%99%E8%95%89/index.html"]],
  ["v-301b24f4","/tag/%E5%9C%86/",{"y":"p","t":"圆 标签","I":0},["/tag/圆/","/tag/%E5%9C%86/index.html"]],
  ["v-3ceeab45","/tag/%E5%A4%A7/",{"y":"p","t":"大 标签","I":0},["/tag/大/","/tag/%E5%A4%A7/index.html"]],
  ["v-42254370","/tag/%E9%BB%84/",{"y":"p","t":"黄 标签","I":0},["/tag/黄/","/tag/%E9%BB%84/index.html"]],
  ["v-3aafda76","/tag/%E5%BC%AF%E6%9B%B2%E7%9A%84/",{"y":"p","t":"弯曲的 标签","I":0},["/tag/弯曲的/","/tag/%E5%BC%AF%E6%9B%B2%E7%9A%84/index.html"]],
  ["v-624a9248","/tag/%E9%95%BF/",{"y":"p","t":"长 标签","I":0},["/tag/长/","/tag/%E9%95%BF/index.html"]],
]
